-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity detect_face_int_sqrt is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    value_r : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of detect_face_int_sqrt is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_20 : BOOLEAN;
    signal tmp_6_fu_168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1605 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_1_fu_180_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal c_1_reg_1613 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_cast_reg_1618 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_cast_reg_1623 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_17_cast_reg_1630 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_cast_reg_1637 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_cast_reg_1644 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_cast_reg_1651 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_22_cast_reg_1658 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_cast_reg_1665 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_24_cast_reg_1672 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_25_cast_reg_1679 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_cast_reg_1686 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_cast_reg_1693 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_28_cast_reg_1700 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_cast_reg_1707 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_1_1_fu_378_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_1_1_reg_1714 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_71 : BOOLEAN;
    signal not_tmp_6_2_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_6_2_reg_1726 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_6_3_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_6_3_reg_1738 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_6_4_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_6_4_reg_1750 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_6_5_fu_691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_6_5_reg_1762 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_6_6_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_6_6_reg_1774 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_6_7_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_6_7_reg_1786 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_8_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_8_reg_1798 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_952_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_65_reg_1804 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_66_fu_956_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_66_reg_1809 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_1_fu_154_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp1_cast_fu_164_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal c_4_fu_174_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_328_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_1_cast_cast_fu_352_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_3_1_cast2_fu_334_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_1_cast_cast1_fu_345_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_1_fu_359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_2_1_fu_338_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_3_1_fu_371_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal c_4_1_fu_365_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_386_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_3_fu_390_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_4_fu_394_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_4_2_fu_413_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_2_fu_421_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal c_3_2_fu_406_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_2_cast_fu_427_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_402_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_6_2_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_454_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_8_fu_437_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_10_fu_444_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_7_fu_458_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_14_fu_465_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_9_fu_471_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_4_3_fu_490_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_3_fu_500_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_3_3_fu_483_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_3_cast_fu_506_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_479_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_6_3_fu_510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_533_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_18_fu_516_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_20_fu_523_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_s_fu_537_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_24_fu_544_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_11_fu_550_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_4_4_fu_569_p5 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_4_fu_581_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal c_3_4_fu_562_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_4_cast_fu_587_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_558_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_6_4_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_614_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_28_fu_597_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_30_fu_604_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_13_fu_618_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_34_fu_625_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_15_fu_631_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_4_5_fu_650_p6 : STD_LOGIC_VECTOR (6 downto 0);
    signal b_5_fu_664_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal c_3_5_fu_643_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_5_cast_fu_670_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_fu_639_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_6_5_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_697_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_38_fu_680_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_40_fu_687_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_17_fu_701_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_44_fu_708_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_19_fu_714_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_4_6_fu_733_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_6_fu_749_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal c_3_6_fu_726_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_6_cast_fu_755_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_722_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_6_6_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_782_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_48_fu_765_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_50_fu_772_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_21_fu_786_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_54_fu_793_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_23_fu_799_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_4_7_fu_818_p8 : STD_LOGIC_VECTOR (8 downto 0);
    signal b_7_fu_836_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal c_3_7_fu_811_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_7_cast_fu_842_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_807_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_6_7_fu_846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_869_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_58_fu_852_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_59_fu_859_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_25_fu_873_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_61_fu_880_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_27_fu_886_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_4_8_fu_905_p9 : STD_LOGIC_VECTOR (9 downto 0);
    signal b_8_fu_925_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal c_3_8_fu_898_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_8_cast_fu_931_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_fu_894_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_63_fu_941_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_64_fu_948_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_490 : BOOLEAN;
    signal tmp_29_fu_967_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_31_fu_973_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal not_tmp_6_8_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_9_fu_990_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal b_9_fu_1005_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal c_3_9_fu_983_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_9_cast_fu_1011_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_fu_979_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_6_9_fu_1015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_fu_1038_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_68_fu_1021_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_69_fu_1028_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_33_fu_1042_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_71_fu_1049_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_35_fu_1055_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal not_tmp_6_9_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_s_fu_1074_p11 : STD_LOGIC_VECTOR (11 downto 0);
    signal b_s_fu_1091_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_3_s_fu_1067_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_cast_fu_1097_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_fu_1063_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_6_s_fu_1101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_fu_1124_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_73_fu_1107_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_74_fu_1114_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_37_fu_1128_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_76_fu_1135_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_39_fu_1141_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal not_tmp_6_s_fu_1118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_1_fu_1160_p12 : STD_LOGIC_VECTOR (12 downto 0);
    signal b_1_fu_1179_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal c_3_1_fu_1153_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_10_cast_fu_1185_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_77_fu_1149_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_6_10_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_1212_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_78_fu_1195_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_79_fu_1202_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_41_fu_1216_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_81_fu_1223_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_43_fu_1229_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal not_tmp_6_1_fu_1206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_10_fu_1248_p13 : STD_LOGIC_VECTOR (13 downto 0);
    signal b_10_fu_1269_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal c_3_10_fu_1241_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_11_cast_fu_1275_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_fu_1237_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_6_11_fu_1279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_fu_1302_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_83_fu_1285_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_84_fu_1292_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_45_fu_1306_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_86_fu_1313_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_47_fu_1319_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal not_tmp_6_10_fu_1296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_11_fu_1338_p14 : STD_LOGIC_VECTOR (14 downto 0);
    signal b_11_fu_1361_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal c_3_11_fu_1331_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_12_cast_fu_1367_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_fu_1327_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_6_12_fu_1371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_90_fu_1394_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_88_fu_1377_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_89_fu_1384_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_49_fu_1398_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_91_fu_1405_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_51_fu_1411_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal not_tmp_6_11_fu_1388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_12_fu_1430_p15 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_12_fu_1455_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal c_3_12_fu_1423_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_13_cast_fu_1461_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_92_fu_1419_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_6_13_fu_1465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_96_fu_1491_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_93_fu_1471_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_94_fu_1478_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_53_fu_1495_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_97_fu_1502_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_55_fu_1508_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_95_fu_1488_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal not_tmp_6_12_fu_1482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_13_fu_1524_p16 : STD_LOGIC_VECTOR (16 downto 0);
    signal b_13_fu_1551_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal c_3_13_fu_1516_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_14_cast_fu_1557_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ult_fu_1561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev4_fu_1567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                a_1_1_reg_1714 <= a_1_1_fu_378_p3;
                not_tmp_6_2_reg_1726 <= not_tmp_6_2_fu_448_p2;
                not_tmp_6_3_reg_1738 <= not_tmp_6_3_fu_527_p2;
                not_tmp_6_4_reg_1750 <= not_tmp_6_4_fu_608_p2;
                not_tmp_6_5_reg_1762 <= not_tmp_6_5_fu_691_p2;
                not_tmp_6_6_reg_1774 <= not_tmp_6_6_fu_776_p2;
                not_tmp_6_7_reg_1786 <= not_tmp_6_7_fu_863_p2;
                tmp_65_reg_1804 <= tmp_65_fu_952_p1;
                tmp_66_reg_1809 <= tmp_66_fu_956_p2;
                tmp_6_8_reg_1798 <= tmp_6_8_fu_935_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                c_1_reg_1613 <= c_1_fu_180_p3;
                tmp_16_cast_reg_1623 <= value_r(27 downto 26);
                tmp_17_cast_reg_1630 <= value_r(25 downto 24);
                tmp_18_cast_reg_1637 <= value_r(23 downto 22);
                tmp_19_cast_reg_1644 <= value_r(21 downto 20);
                tmp_20_cast_reg_1651 <= value_r(19 downto 18);
                tmp_22_cast_reg_1658 <= value_r(17 downto 16);
                tmp_23_cast_reg_1665 <= value_r(15 downto 14);
                tmp_24_cast_reg_1672 <= value_r(13 downto 12);
                tmp_25_cast_reg_1679 <= value_r(11 downto 10);
                tmp_26_cast_reg_1686 <= value_r(9 downto 8);
                tmp_27_cast_reg_1693 <= value_r(7 downto 6);
                tmp_28_cast_reg_1700 <= value_r(5 downto 4);
                tmp_29_cast_reg_1707 <= value_r(3 downto 2);
                tmp_4_cast_reg_1618 <= value_r(29 downto 28);
                tmp_6_reg_1605 <= tmp_6_fu_168_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    a_1_1_fu_378_p3 <= 
        a_2_1_fu_338_p3 when (tmp_6_1_fu_359_p2(0) = '1') else 
        a_3_1_fu_371_p3;
    a_2_1_fu_338_p3 <= 
        ap_const_lv2_0 when (tmp_6_reg_1605(0) = '1') else 
        ap_const_lv2_2;
    a_3_1_fu_371_p3 <= 
        ap_const_lv2_1 when (tmp_6_reg_1605(0) = '1') else 
        ap_const_lv2_3;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ((((((((((((((a_1_1_reg_1714 & not_tmp_6_2_reg_1726) & not_tmp_6_3_reg_1738) & not_tmp_6_4_reg_1750) & not_tmp_6_5_reg_1762) & not_tmp_6_6_reg_1774) & not_tmp_6_7_reg_1786) & not_tmp_6_8_fu_962_p2) & not_tmp_6_9_fu_1032_p2) & not_tmp_6_s_fu_1118_p2) & not_tmp_6_1_fu_1206_p2) & not_tmp_6_10_fu_1296_p2) & not_tmp_6_11_fu_1388_p2) & not_tmp_6_12_fu_1482_p2) & rev4_fu_1567_p2);

    ap_sig_20_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_20 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_490_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_490 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_71_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_71 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_20)
    begin
        if (ap_sig_20) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_71)
    begin
        if (ap_sig_71) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_490)
    begin
        if (ap_sig_490) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;

    b_10_cast_fu_1185_p1 <= std_logic_vector(resize(unsigned(b_1_fu_1179_p2),32));
    b_10_fu_1269_p2 <= (tmp_4_10_fu_1248_p13 or ap_const_lv14_1);
    b_11_cast_fu_1275_p1 <= std_logic_vector(resize(unsigned(b_10_fu_1269_p2),32));
    b_11_fu_1361_p2 <= (tmp_4_11_fu_1338_p14 or ap_const_lv15_1);
    b_12_cast_fu_1367_p1 <= std_logic_vector(resize(unsigned(b_11_fu_1361_p2),32));
    b_12_fu_1455_p2 <= (tmp_4_12_fu_1430_p15 or ap_const_lv16_1);
    b_13_cast_fu_1461_p1 <= std_logic_vector(resize(unsigned(b_12_fu_1455_p2),32));
    b_13_fu_1551_p2 <= (tmp_4_13_fu_1524_p16 or ap_const_lv17_1);
    b_14_cast_fu_1557_p1 <= std_logic_vector(resize(unsigned(b_13_fu_1551_p2),32));
    b_1_cast_cast1_fu_345_p3 <= 
        ap_const_lv6_1 when (tmp_6_reg_1605(0) = '1') else 
        ap_const_lv6_5;
    b_1_cast_cast_fu_352_p3 <= 
        ap_const_lv5_1 when (tmp_6_reg_1605(0) = '1') else 
        ap_const_lv5_5;
    b_1_fu_1179_p2 <= (tmp_4_1_fu_1160_p12 or ap_const_lv13_1);
    b_2_cast_fu_427_p1 <= std_logic_vector(resize(unsigned(b_2_fu_421_p2),32));
    b_2_fu_421_p2 <= (tmp_4_2_fu_413_p3 or ap_const_lv4_1);
    b_3_cast_fu_506_p1 <= std_logic_vector(resize(unsigned(b_3_fu_500_p2),32));
    b_3_fu_500_p2 <= (tmp_4_3_fu_490_p4 or ap_const_lv5_1);
    b_4_cast_fu_587_p1 <= std_logic_vector(resize(unsigned(b_4_fu_581_p2),32));
    b_4_fu_581_p2 <= (tmp_4_4_fu_569_p5 or ap_const_lv6_1);
    b_5_cast_fu_670_p1 <= std_logic_vector(resize(unsigned(b_5_fu_664_p2),32));
    b_5_fu_664_p2 <= (tmp_4_5_fu_650_p6 or ap_const_lv7_1);
    b_6_cast_fu_755_p1 <= std_logic_vector(resize(unsigned(b_6_fu_749_p2),32));
    b_6_fu_749_p2 <= (tmp_4_6_fu_733_p7 or ap_const_lv8_1);
    b_7_cast_fu_842_p1 <= std_logic_vector(resize(unsigned(b_7_fu_836_p2),32));
    b_7_fu_836_p2 <= (tmp_4_7_fu_818_p8 or ap_const_lv9_1);
    b_8_cast_fu_931_p1 <= std_logic_vector(resize(unsigned(b_8_fu_925_p2),32));
    b_8_fu_925_p2 <= (tmp_4_8_fu_905_p9 or ap_const_lv10_1);
    b_9_cast_fu_1011_p1 <= std_logic_vector(resize(unsigned(b_9_fu_1005_p2),32));
    b_9_fu_1005_p2 <= (tmp_4_9_fu_990_p10 or ap_const_lv11_1);
    b_cast_fu_1097_p1 <= std_logic_vector(resize(unsigned(b_s_fu_1091_p2),32));
    b_s_fu_1091_p2 <= (tmp_4_s_fu_1074_p11 or ap_const_lv12_1);
    c_1_fu_180_p3 <= 
        ap_const_lv3_0 when (tmp_6_fu_168_p2(0) = '1') else 
        c_4_fu_174_p2;
    c_3_10_fu_1241_p3 <= (tmp_43_fu_1229_p3 & tmp_27_cast_reg_1693);
    c_3_11_fu_1331_p3 <= (tmp_47_fu_1319_p3 & tmp_28_cast_reg_1700);
    c_3_12_fu_1423_p3 <= (tmp_51_fu_1411_p3 & tmp_29_cast_reg_1707);
    c_3_13_fu_1516_p3 <= (tmp_55_fu_1508_p3 & tmp_95_fu_1488_p1);
        c_3_1_cast2_fu_334_p1 <= std_logic_vector(resize(signed(tmp_fu_328_p3),6));

    c_3_1_fu_1153_p3 <= (tmp_39_fu_1141_p3 & tmp_26_cast_reg_1686);
    c_3_2_fu_406_p3 <= (tmp_4_fu_394_p3 & tmp_16_cast_reg_1623);
    c_3_3_fu_483_p3 <= (tmp_9_fu_471_p3 & tmp_17_cast_reg_1630);
    c_3_4_fu_562_p3 <= (tmp_11_fu_550_p3 & tmp_18_cast_reg_1637);
    c_3_5_fu_643_p3 <= (tmp_15_fu_631_p3 & tmp_19_cast_reg_1644);
    c_3_6_fu_726_p3 <= (tmp_19_fu_714_p3 & tmp_20_cast_reg_1651);
    c_3_7_fu_811_p3 <= (tmp_23_fu_799_p3 & tmp_22_cast_reg_1658);
    c_3_8_fu_898_p3 <= (tmp_27_fu_886_p3 & tmp_23_cast_reg_1665);
    c_3_9_fu_983_p3 <= (tmp_31_fu_973_p3 & tmp_24_cast_reg_1672);
    c_3_s_fu_1067_p3 <= (tmp_35_fu_1055_p3 & tmp_25_cast_reg_1679);
    c_4_1_fu_365_p2 <= std_logic_vector(signed(c_3_1_cast2_fu_334_p1) - signed(b_1_cast_cast1_fu_345_p3));
    c_4_fu_174_p2 <= std_logic_vector(unsigned(tmp1_cast_fu_164_p1) + unsigned(ap_const_lv3_7));
    not_tmp_6_10_fu_1296_p2 <= (tmp_6_11_fu_1279_p2 xor ap_const_lv1_1);
    not_tmp_6_11_fu_1388_p2 <= (tmp_6_12_fu_1371_p2 xor ap_const_lv1_1);
    not_tmp_6_12_fu_1482_p2 <= (tmp_6_13_fu_1465_p2 xor ap_const_lv1_1);
    not_tmp_6_1_fu_1206_p2 <= (tmp_6_10_fu_1189_p2 xor ap_const_lv1_1);
    not_tmp_6_2_fu_448_p2 <= (tmp_6_2_fu_431_p2 xor ap_const_lv1_1);
    not_tmp_6_3_fu_527_p2 <= (tmp_6_3_fu_510_p2 xor ap_const_lv1_1);
    not_tmp_6_4_fu_608_p2 <= (tmp_6_4_fu_591_p2 xor ap_const_lv1_1);
    not_tmp_6_5_fu_691_p2 <= (tmp_6_5_fu_674_p2 xor ap_const_lv1_1);
    not_tmp_6_6_fu_776_p2 <= (tmp_6_6_fu_759_p2 xor ap_const_lv1_1);
    not_tmp_6_7_fu_863_p2 <= (tmp_6_7_fu_846_p2 xor ap_const_lv1_1);
    not_tmp_6_8_fu_962_p2 <= (tmp_6_8_reg_1798 xor ap_const_lv1_1);
    not_tmp_6_9_fu_1032_p2 <= (tmp_6_9_fu_1015_p2 xor ap_const_lv1_1);
    not_tmp_6_s_fu_1118_p2 <= (tmp_6_s_fu_1101_p2 xor ap_const_lv1_1);
    rev4_fu_1567_p2 <= (ult_fu_1561_p2 xor ap_const_lv1_1);
    tmp1_cast_fu_164_p1 <= std_logic_vector(resize(unsigned(tmp_1_fu_154_p4),3));
    tmp_10_fu_444_p1 <= std_logic_vector(resize(unsigned(b_2_fu_421_p2),30));
    tmp_11_fu_550_p3 <= 
        tmp_s_fu_537_p3 when (tmp_6_3_fu_510_p2(0) = '1') else 
        tmp_24_fu_544_p2;
    tmp_12_fu_454_p1 <= tmp_4_fu_394_p3(28 - 1 downto 0);
    tmp_13_fu_618_p3 <= (tmp_32_fu_614_p1 & tmp_18_cast_reg_1637);
    tmp_14_fu_465_p2 <= std_logic_vector(unsigned(tmp_8_fu_437_p3) - unsigned(tmp_10_fu_444_p1));
    tmp_15_fu_631_p3 <= 
        tmp_13_fu_618_p3 when (tmp_6_4_fu_591_p2(0) = '1') else 
        tmp_34_fu_625_p2;
    tmp_16_fu_479_p1 <= tmp_9_fu_471_p3(28 - 1 downto 0);
    tmp_17_fu_701_p3 <= (tmp_42_fu_697_p1 & tmp_19_cast_reg_1644);
    tmp_18_fu_516_p3 <= (tmp_16_fu_479_p1 & tmp_17_cast_reg_1630);
    tmp_19_fu_714_p3 <= 
        tmp_17_fu_701_p3 when (tmp_6_5_fu_674_p2(0) = '1') else 
        tmp_44_fu_708_p2;
    tmp_1_fu_154_p4 <= value_r(31 downto 30);
    tmp_20_fu_523_p1 <= std_logic_vector(resize(unsigned(b_3_fu_500_p2),30));
    tmp_21_fu_786_p3 <= (tmp_52_fu_782_p1 & tmp_20_cast_reg_1651);
    tmp_22_fu_533_p1 <= tmp_9_fu_471_p3(28 - 1 downto 0);
    tmp_23_fu_799_p3 <= 
        tmp_21_fu_786_p3 when (tmp_6_6_fu_759_p2(0) = '1') else 
        tmp_54_fu_793_p2;
    tmp_24_fu_544_p2 <= std_logic_vector(unsigned(tmp_18_fu_516_p3) - unsigned(tmp_20_fu_523_p1));
    tmp_25_fu_873_p3 <= (tmp_60_fu_869_p1 & tmp_22_cast_reg_1658);
    tmp_26_fu_558_p1 <= tmp_11_fu_550_p3(28 - 1 downto 0);
    tmp_27_fu_886_p3 <= 
        tmp_25_fu_873_p3 when (tmp_6_7_fu_846_p2(0) = '1') else 
        tmp_61_fu_880_p2;
    tmp_28_fu_597_p3 <= (tmp_26_fu_558_p1 & tmp_18_cast_reg_1637);
    tmp_29_fu_967_p3 <= (tmp_65_reg_1804 & tmp_23_cast_reg_1665);
        tmp_2_fu_386_p1 <= std_logic_vector(resize(signed(tmp_fu_328_p3),30));

    tmp_30_fu_604_p1 <= std_logic_vector(resize(unsigned(b_4_fu_581_p2),30));
    tmp_31_fu_973_p3 <= 
        tmp_29_fu_967_p3 when (tmp_6_8_reg_1798(0) = '1') else 
        tmp_66_reg_1809;
    tmp_32_fu_614_p1 <= tmp_11_fu_550_p3(28 - 1 downto 0);
    tmp_33_fu_1042_p3 <= (tmp_70_fu_1038_p1 & tmp_24_cast_reg_1672);
    tmp_34_fu_625_p2 <= std_logic_vector(unsigned(tmp_28_fu_597_p3) - unsigned(tmp_30_fu_604_p1));
    tmp_35_fu_1055_p3 <= 
        tmp_33_fu_1042_p3 when (tmp_6_9_fu_1015_p2(0) = '1') else 
        tmp_71_fu_1049_p2;
    tmp_36_fu_639_p1 <= tmp_15_fu_631_p3(28 - 1 downto 0);
    tmp_37_fu_1128_p3 <= (tmp_75_fu_1124_p1 & tmp_25_cast_reg_1679);
    tmp_38_fu_680_p3 <= (tmp_36_fu_639_p1 & tmp_19_cast_reg_1644);
    tmp_39_fu_1141_p3 <= 
        tmp_37_fu_1128_p3 when (tmp_6_s_fu_1101_p2(0) = '1') else 
        tmp_76_fu_1135_p2;
        tmp_3_fu_390_p1 <= std_logic_vector(resize(signed(c_4_1_fu_365_p2),30));

    tmp_40_fu_687_p1 <= std_logic_vector(resize(unsigned(b_5_fu_664_p2),30));
    tmp_41_fu_1216_p3 <= (tmp_80_fu_1212_p1 & tmp_26_cast_reg_1686);
    tmp_42_fu_697_p1 <= tmp_15_fu_631_p3(28 - 1 downto 0);
    tmp_43_fu_1229_p3 <= 
        tmp_41_fu_1216_p3 when (tmp_6_10_fu_1189_p2(0) = '1') else 
        tmp_81_fu_1223_p2;
    tmp_44_fu_708_p2 <= std_logic_vector(unsigned(tmp_38_fu_680_p3) - unsigned(tmp_40_fu_687_p1));
    tmp_45_fu_1306_p3 <= (tmp_85_fu_1302_p1 & tmp_27_cast_reg_1693);
    tmp_46_fu_722_p1 <= tmp_19_fu_714_p3(28 - 1 downto 0);
    tmp_47_fu_1319_p3 <= 
        tmp_45_fu_1306_p3 when (tmp_6_11_fu_1279_p2(0) = '1') else 
        tmp_86_fu_1313_p2;
    tmp_48_fu_765_p3 <= (tmp_46_fu_722_p1 & tmp_20_cast_reg_1651);
    tmp_49_fu_1398_p3 <= (tmp_90_fu_1394_p1 & tmp_28_cast_reg_1700);
    tmp_4_10_fu_1248_p13 <= (((((((((((a_1_1_reg_1714 & not_tmp_6_2_reg_1726) & not_tmp_6_3_reg_1738) & not_tmp_6_4_reg_1750) & not_tmp_6_5_reg_1762) & not_tmp_6_6_reg_1774) & not_tmp_6_7_reg_1786) & not_tmp_6_8_fu_962_p2) & not_tmp_6_9_fu_1032_p2) & not_tmp_6_s_fu_1118_p2) & not_tmp_6_1_fu_1206_p2) & ap_const_lv2_0);
    tmp_4_11_fu_1338_p14 <= ((((((((((((a_1_1_reg_1714 & not_tmp_6_2_reg_1726) & not_tmp_6_3_reg_1738) & not_tmp_6_4_reg_1750) & not_tmp_6_5_reg_1762) & not_tmp_6_6_reg_1774) & not_tmp_6_7_reg_1786) & not_tmp_6_8_fu_962_p2) & not_tmp_6_9_fu_1032_p2) & not_tmp_6_s_fu_1118_p2) & not_tmp_6_1_fu_1206_p2) & not_tmp_6_10_fu_1296_p2) & ap_const_lv2_0);
    tmp_4_12_fu_1430_p15 <= (((((((((((((a_1_1_reg_1714 & not_tmp_6_2_reg_1726) & not_tmp_6_3_reg_1738) & not_tmp_6_4_reg_1750) & not_tmp_6_5_reg_1762) & not_tmp_6_6_reg_1774) & not_tmp_6_7_reg_1786) & not_tmp_6_8_fu_962_p2) & not_tmp_6_9_fu_1032_p2) & not_tmp_6_s_fu_1118_p2) & not_tmp_6_1_fu_1206_p2) & not_tmp_6_10_fu_1296_p2) & not_tmp_6_11_fu_1388_p2) & ap_const_lv2_0);
    tmp_4_13_fu_1524_p16 <= ((((((((((((((a_1_1_reg_1714 & not_tmp_6_2_reg_1726) & not_tmp_6_3_reg_1738) & not_tmp_6_4_reg_1750) & not_tmp_6_5_reg_1762) & not_tmp_6_6_reg_1774) & not_tmp_6_7_reg_1786) & not_tmp_6_8_fu_962_p2) & not_tmp_6_9_fu_1032_p2) & not_tmp_6_s_fu_1118_p2) & not_tmp_6_1_fu_1206_p2) & not_tmp_6_10_fu_1296_p2) & not_tmp_6_11_fu_1388_p2) & not_tmp_6_12_fu_1482_p2) & ap_const_lv2_0);
    tmp_4_1_fu_1160_p12 <= ((((((((((a_1_1_reg_1714 & not_tmp_6_2_reg_1726) & not_tmp_6_3_reg_1738) & not_tmp_6_4_reg_1750) & not_tmp_6_5_reg_1762) & not_tmp_6_6_reg_1774) & not_tmp_6_7_reg_1786) & not_tmp_6_8_fu_962_p2) & not_tmp_6_9_fu_1032_p2) & not_tmp_6_s_fu_1118_p2) & ap_const_lv2_0);
    tmp_4_2_fu_413_p3 <= (a_1_1_fu_378_p3 & ap_const_lv2_0);
    tmp_4_3_fu_490_p4 <= ((a_1_1_fu_378_p3 & not_tmp_6_2_fu_448_p2) & ap_const_lv2_0);
    tmp_4_4_fu_569_p5 <= (((a_1_1_fu_378_p3 & not_tmp_6_2_fu_448_p2) & not_tmp_6_3_fu_527_p2) & ap_const_lv2_0);
    tmp_4_5_fu_650_p6 <= ((((a_1_1_fu_378_p3 & not_tmp_6_2_fu_448_p2) & not_tmp_6_3_fu_527_p2) & not_tmp_6_4_fu_608_p2) & ap_const_lv2_0);
    tmp_4_6_fu_733_p7 <= (((((a_1_1_fu_378_p3 & not_tmp_6_2_fu_448_p2) & not_tmp_6_3_fu_527_p2) & not_tmp_6_4_fu_608_p2) & not_tmp_6_5_fu_691_p2) & ap_const_lv2_0);
    tmp_4_7_fu_818_p8 <= ((((((a_1_1_fu_378_p3 & not_tmp_6_2_fu_448_p2) & not_tmp_6_3_fu_527_p2) & not_tmp_6_4_fu_608_p2) & not_tmp_6_5_fu_691_p2) & not_tmp_6_6_fu_776_p2) & ap_const_lv2_0);
    tmp_4_8_fu_905_p9 <= (((((((a_1_1_fu_378_p3 & not_tmp_6_2_fu_448_p2) & not_tmp_6_3_fu_527_p2) & not_tmp_6_4_fu_608_p2) & not_tmp_6_5_fu_691_p2) & not_tmp_6_6_fu_776_p2) & not_tmp_6_7_fu_863_p2) & ap_const_lv2_0);
    tmp_4_9_fu_990_p10 <= ((((((((a_1_1_reg_1714 & not_tmp_6_2_reg_1726) & not_tmp_6_3_reg_1738) & not_tmp_6_4_reg_1750) & not_tmp_6_5_reg_1762) & not_tmp_6_6_reg_1774) & not_tmp_6_7_reg_1786) & not_tmp_6_8_fu_962_p2) & ap_const_lv2_0);
    tmp_4_fu_394_p3 <= 
        tmp_2_fu_386_p1 when (tmp_6_1_fu_359_p2(0) = '1') else 
        tmp_3_fu_390_p1;
    tmp_4_s_fu_1074_p11 <= (((((((((a_1_1_reg_1714 & not_tmp_6_2_reg_1726) & not_tmp_6_3_reg_1738) & not_tmp_6_4_reg_1750) & not_tmp_6_5_reg_1762) & not_tmp_6_6_reg_1774) & not_tmp_6_7_reg_1786) & not_tmp_6_8_fu_962_p2) & not_tmp_6_9_fu_1032_p2) & ap_const_lv2_0);
    tmp_50_fu_772_p1 <= std_logic_vector(resize(unsigned(b_6_fu_749_p2),30));
    tmp_51_fu_1411_p3 <= 
        tmp_49_fu_1398_p3 when (tmp_6_12_fu_1371_p2(0) = '1') else 
        tmp_91_fu_1405_p2;
    tmp_52_fu_782_p1 <= tmp_19_fu_714_p3(28 - 1 downto 0);
    tmp_53_fu_1495_p3 <= (tmp_96_fu_1491_p1 & tmp_29_cast_reg_1707);
    tmp_54_fu_793_p2 <= std_logic_vector(unsigned(tmp_48_fu_765_p3) - unsigned(tmp_50_fu_772_p1));
    tmp_55_fu_1508_p3 <= 
        tmp_53_fu_1495_p3 when (tmp_6_13_fu_1465_p2(0) = '1') else 
        tmp_97_fu_1502_p2;
    tmp_56_fu_807_p1 <= tmp_23_fu_799_p3(28 - 1 downto 0);
    tmp_58_fu_852_p3 <= (tmp_56_fu_807_p1 & tmp_22_cast_reg_1658);
    tmp_59_fu_859_p1 <= std_logic_vector(resize(unsigned(b_7_fu_836_p2),30));
    tmp_5_fu_402_p1 <= tmp_4_fu_394_p3(28 - 1 downto 0);
    tmp_60_fu_869_p1 <= tmp_23_fu_799_p3(28 - 1 downto 0);
    tmp_61_fu_880_p2 <= std_logic_vector(unsigned(tmp_58_fu_852_p3) - unsigned(tmp_59_fu_859_p1));
    tmp_62_fu_894_p1 <= tmp_27_fu_886_p3(28 - 1 downto 0);
    tmp_63_fu_941_p3 <= (tmp_62_fu_894_p1 & tmp_23_cast_reg_1665);
    tmp_64_fu_948_p1 <= std_logic_vector(resize(unsigned(b_8_fu_925_p2),30));
    tmp_65_fu_952_p1 <= tmp_27_fu_886_p3(28 - 1 downto 0);
    tmp_66_fu_956_p2 <= std_logic_vector(unsigned(tmp_63_fu_941_p3) - unsigned(tmp_64_fu_948_p1));
    tmp_67_fu_979_p1 <= tmp_31_fu_973_p3(28 - 1 downto 0);
    tmp_68_fu_1021_p3 <= (tmp_67_fu_979_p1 & tmp_24_cast_reg_1672);
    tmp_69_fu_1028_p1 <= std_logic_vector(resize(unsigned(b_9_fu_1005_p2),30));
    tmp_6_10_fu_1189_p2 <= "1" when (unsigned(c_3_1_fu_1153_p3) < unsigned(b_10_cast_fu_1185_p1)) else "0";
    tmp_6_11_fu_1279_p2 <= "1" when (unsigned(c_3_10_fu_1241_p3) < unsigned(b_11_cast_fu_1275_p1)) else "0";
    tmp_6_12_fu_1371_p2 <= "1" when (unsigned(c_3_11_fu_1331_p3) < unsigned(b_12_cast_fu_1367_p1)) else "0";
    tmp_6_13_fu_1465_p2 <= "1" when (unsigned(c_3_12_fu_1423_p3) < unsigned(b_13_cast_fu_1461_p1)) else "0";
    tmp_6_1_fu_359_p2 <= "1" when (unsigned(tmp_fu_328_p3) < unsigned(b_1_cast_cast_fu_352_p3)) else "0";
    tmp_6_2_fu_431_p2 <= "1" when (unsigned(c_3_2_fu_406_p3) < unsigned(b_2_cast_fu_427_p1)) else "0";
    tmp_6_3_fu_510_p2 <= "1" when (unsigned(c_3_3_fu_483_p3) < unsigned(b_3_cast_fu_506_p1)) else "0";
    tmp_6_4_fu_591_p2 <= "1" when (unsigned(c_3_4_fu_562_p3) < unsigned(b_4_cast_fu_587_p1)) else "0";
    tmp_6_5_fu_674_p2 <= "1" when (unsigned(c_3_5_fu_643_p3) < unsigned(b_5_cast_fu_670_p1)) else "0";
    tmp_6_6_fu_759_p2 <= "1" when (unsigned(c_3_6_fu_726_p3) < unsigned(b_6_cast_fu_755_p1)) else "0";
    tmp_6_7_fu_846_p2 <= "1" when (unsigned(c_3_7_fu_811_p3) < unsigned(b_7_cast_fu_842_p1)) else "0";
    tmp_6_8_fu_935_p2 <= "1" when (unsigned(c_3_8_fu_898_p3) < unsigned(b_8_cast_fu_931_p1)) else "0";
    tmp_6_9_fu_1015_p2 <= "1" when (unsigned(c_3_9_fu_983_p3) < unsigned(b_9_cast_fu_1011_p1)) else "0";
    tmp_6_fu_168_p2 <= "1" when (tmp_1_fu_154_p4 = ap_const_lv2_0) else "0";
    tmp_6_s_fu_1101_p2 <= "1" when (unsigned(c_3_s_fu_1067_p3) < unsigned(b_cast_fu_1097_p1)) else "0";
    tmp_70_fu_1038_p1 <= tmp_31_fu_973_p3(28 - 1 downto 0);
    tmp_71_fu_1049_p2 <= std_logic_vector(unsigned(tmp_68_fu_1021_p3) - unsigned(tmp_69_fu_1028_p1));
    tmp_72_fu_1063_p1 <= tmp_35_fu_1055_p3(28 - 1 downto 0);
    tmp_73_fu_1107_p3 <= (tmp_72_fu_1063_p1 & tmp_25_cast_reg_1679);
    tmp_74_fu_1114_p1 <= std_logic_vector(resize(unsigned(b_s_fu_1091_p2),30));
    tmp_75_fu_1124_p1 <= tmp_35_fu_1055_p3(28 - 1 downto 0);
    tmp_76_fu_1135_p2 <= std_logic_vector(unsigned(tmp_73_fu_1107_p3) - unsigned(tmp_74_fu_1114_p1));
    tmp_77_fu_1149_p1 <= tmp_39_fu_1141_p3(28 - 1 downto 0);
    tmp_78_fu_1195_p3 <= (tmp_77_fu_1149_p1 & tmp_26_cast_reg_1686);
    tmp_79_fu_1202_p1 <= std_logic_vector(resize(unsigned(b_1_fu_1179_p2),30));
    tmp_7_fu_458_p3 <= (tmp_12_fu_454_p1 & tmp_16_cast_reg_1623);
    tmp_80_fu_1212_p1 <= tmp_39_fu_1141_p3(28 - 1 downto 0);
    tmp_81_fu_1223_p2 <= std_logic_vector(unsigned(tmp_78_fu_1195_p3) - unsigned(tmp_79_fu_1202_p1));
    tmp_82_fu_1237_p1 <= tmp_43_fu_1229_p3(28 - 1 downto 0);
    tmp_83_fu_1285_p3 <= (tmp_82_fu_1237_p1 & tmp_27_cast_reg_1693);
    tmp_84_fu_1292_p1 <= std_logic_vector(resize(unsigned(b_10_fu_1269_p2),30));
    tmp_85_fu_1302_p1 <= tmp_43_fu_1229_p3(28 - 1 downto 0);
    tmp_86_fu_1313_p2 <= std_logic_vector(unsigned(tmp_83_fu_1285_p3) - unsigned(tmp_84_fu_1292_p1));
    tmp_87_fu_1327_p1 <= tmp_47_fu_1319_p3(28 - 1 downto 0);
    tmp_88_fu_1377_p3 <= (tmp_87_fu_1327_p1 & tmp_28_cast_reg_1700);
    tmp_89_fu_1384_p1 <= std_logic_vector(resize(unsigned(b_11_fu_1361_p2),30));
    tmp_8_fu_437_p3 <= (tmp_5_fu_402_p1 & tmp_16_cast_reg_1623);
    tmp_90_fu_1394_p1 <= tmp_47_fu_1319_p3(28 - 1 downto 0);
    tmp_91_fu_1405_p2 <= std_logic_vector(unsigned(tmp_88_fu_1377_p3) - unsigned(tmp_89_fu_1384_p1));
    tmp_92_fu_1419_p1 <= tmp_51_fu_1411_p3(28 - 1 downto 0);
    tmp_93_fu_1471_p3 <= (tmp_92_fu_1419_p1 & tmp_29_cast_reg_1707);
    tmp_94_fu_1478_p1 <= std_logic_vector(resize(unsigned(b_12_fu_1455_p2),30));
    tmp_95_fu_1488_p1 <= value_r(2 - 1 downto 0);
    tmp_96_fu_1491_p1 <= tmp_51_fu_1411_p3(28 - 1 downto 0);
    tmp_97_fu_1502_p2 <= std_logic_vector(unsigned(tmp_93_fu_1471_p3) - unsigned(tmp_94_fu_1478_p1));
    tmp_9_fu_471_p3 <= 
        tmp_7_fu_458_p3 when (tmp_6_2_fu_431_p2(0) = '1') else 
        tmp_14_fu_465_p2;
    tmp_fu_328_p3 <= (c_1_reg_1613 & tmp_4_cast_reg_1618);
    tmp_s_fu_537_p3 <= (tmp_22_fu_533_p1 & tmp_17_cast_reg_1630);
    ult_fu_1561_p2 <= "1" when (unsigned(c_3_13_fu_1516_p3) < unsigned(b_14_cast_fu_1557_p1)) else "0";
end behav;

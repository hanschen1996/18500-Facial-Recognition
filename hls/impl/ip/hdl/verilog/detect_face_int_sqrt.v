// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module detect_face_int_sqrt (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        value_r,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 11'b1;
parameter    ap_ST_st2_fsm_1 = 11'b10;
parameter    ap_ST_st3_fsm_2 = 11'b100;
parameter    ap_ST_st4_fsm_3 = 11'b1000;
parameter    ap_ST_st5_fsm_4 = 11'b10000;
parameter    ap_ST_st6_fsm_5 = 11'b100000;
parameter    ap_ST_st7_fsm_6 = 11'b1000000;
parameter    ap_ST_st8_fsm_7 = 11'b10000000;
parameter    ap_ST_st9_fsm_8 = 11'b100000000;
parameter    ap_ST_st10_fsm_9 = 11'b1000000000;
parameter    ap_ST_st11_fsm_10 = 11'b10000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv3_7 = 3'b111;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_5 = 6'b101;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_5 = 5'b101;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv13_1 = 13'b1;
parameter    ap_const_lv14_1 = 14'b1;
parameter    ap_const_lv15_1 = 15'b1;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv17_1 = 17'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] value_r;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_28;
wire   [1:0] a_1_1_fu_254_p3;
reg   [1:0] a_1_1_reg_1529;
reg   [1:0] tmp_16_cast_reg_1548;
wire   [29:0] tmp_4_fu_280_p3;
reg   [29:0] tmp_4_reg_1555;
wire   [27:0] tmp_5_fu_288_p1;
reg   [27:0] tmp_5_reg_1560;
reg   [1:0] tmp_17_cast_reg_1565;
wire   [27:0] tmp_12_fu_302_p1;
reg   [27:0] tmp_12_reg_1572;
reg   [1:0] tmp_18_cast_reg_1577;
reg   [1:0] tmp_19_cast_reg_1584;
reg   [1:0] tmp_20_cast_reg_1591;
reg   [1:0] tmp_22_cast_reg_1598;
reg   [1:0] tmp_23_cast_reg_1605;
reg   [1:0] tmp_24_cast_reg_1612;
reg   [1:0] tmp_25_cast_reg_1619;
reg   [1:0] tmp_26_cast_reg_1626;
reg   [1:0] tmp_27_cast_reg_1633;
reg   [1:0] tmp_28_cast_reg_1640;
reg   [1:0] tmp_29_cast_reg_1647;
wire   [0:0] not_tmp_6_2_fu_455_p2;
reg   [0:0] not_tmp_6_2_reg_1654;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_81;
wire   [0:0] tmp_6_3_fu_511_p2;
reg   [0:0] tmp_6_3_reg_1671;
wire   [27:0] tmp_22_fu_528_p1;
reg   [27:0] tmp_22_reg_1677;
wire   [29:0] tmp_24_fu_532_p2;
reg   [29:0] tmp_24_reg_1682;
wire   [0:0] not_tmp_6_3_fu_538_p2;
reg   [0:0] not_tmp_6_3_reg_1687;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_96;
wire   [0:0] not_tmp_6_4_fu_603_p2;
reg   [0:0] not_tmp_6_4_reg_1703;
wire   [29:0] tmp_15_fu_626_p3;
reg   [29:0] tmp_15_reg_1719;
wire   [27:0] tmp_36_fu_634_p1;
reg   [27:0] tmp_36_reg_1724;
wire   [27:0] tmp_42_fu_638_p1;
reg   [27:0] tmp_42_reg_1729;
wire   [0:0] not_tmp_6_5_fu_684_p2;
reg   [0:0] not_tmp_6_5_reg_1734;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_113;
wire   [0:0] tmp_6_6_fu_743_p2;
reg   [0:0] tmp_6_6_reg_1748;
wire   [27:0] tmp_52_fu_760_p1;
reg   [27:0] tmp_52_reg_1754;
wire   [29:0] tmp_54_fu_764_p2;
reg   [29:0] tmp_54_reg_1759;
wire   [0:0] not_tmp_6_6_fu_770_p2;
reg   [0:0] not_tmp_6_6_reg_1764;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_128;
wire   [0:0] not_tmp_6_7_fu_838_p2;
reg   [0:0] not_tmp_6_7_reg_1777;
wire   [29:0] tmp_27_fu_861_p3;
reg   [29:0] tmp_27_reg_1790;
wire   [27:0] tmp_62_fu_869_p1;
reg   [27:0] tmp_62_reg_1795;
wire   [27:0] tmp_65_fu_873_p1;
reg   [27:0] tmp_65_reg_1800;
wire   [0:0] not_tmp_6_8_fu_922_p2;
reg   [0:0] not_tmp_6_8_reg_1805;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_145;
wire   [0:0] tmp_6_9_fu_984_p2;
reg   [0:0] tmp_6_9_reg_1816;
wire   [27:0] tmp_70_fu_1001_p1;
reg   [27:0] tmp_70_reg_1822;
wire   [29:0] tmp_71_fu_1005_p2;
reg   [29:0] tmp_71_reg_1827;
wire   [0:0] not_tmp_6_9_fu_1011_p2;
reg   [0:0] not_tmp_6_9_reg_1832;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_160;
wire   [0:0] not_tmp_6_s_fu_1082_p2;
reg   [0:0] not_tmp_6_s_reg_1842;
wire   [29:0] tmp_39_fu_1105_p3;
reg   [29:0] tmp_39_reg_1852;
wire   [27:0] tmp_77_fu_1113_p1;
reg   [27:0] tmp_77_reg_1857;
wire   [27:0] tmp_80_fu_1117_p1;
reg   [27:0] tmp_80_reg_1862;
wire   [0:0] not_tmp_6_1_fu_1169_p2;
reg   [0:0] not_tmp_6_1_reg_1867;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_177;
wire   [0:0] tmp_6_11_fu_1234_p2;
reg   [0:0] tmp_6_11_reg_1875;
wire   [27:0] tmp_85_fu_1251_p1;
reg   [27:0] tmp_85_reg_1881;
wire   [29:0] tmp_86_fu_1255_p2;
reg   [29:0] tmp_86_reg_1886;
wire   [0:0] not_tmp_6_10_fu_1261_p2;
reg   [0:0] not_tmp_6_10_reg_1891;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_192;
wire   [0:0] not_tmp_6_11_fu_1335_p2;
reg   [0:0] not_tmp_6_11_reg_1898;
wire   [29:0] tmp_51_fu_1358_p3;
reg   [29:0] tmp_51_reg_1905;
wire   [27:0] tmp_92_fu_1366_p1;
reg   [27:0] tmp_92_reg_1911;
wire   [0:0] not_tmp_6_12_fu_1421_p2;
reg   [0:0] not_tmp_6_12_reg_1916;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_207;
wire   [0:0] ult_fu_1493_p2;
reg   [0:0] ult_reg_1921;
wire   [1:0] tmp_1_fu_154_p4;
wire   [2:0] tmp1_cast_fu_164_p1;
wire   [0:0] tmp_6_fu_168_p2;
wire   [2:0] c_4_fu_174_p2;
wire   [2:0] c_1_fu_180_p3;
wire   [1:0] tmp_4_cast_fu_188_p4;
wire   [4:0] tmp_fu_198_p3;
wire   [4:0] b_1_cast_cast_fu_226_p3;
wire  signed [5:0] c_3_1_cast2_fu_206_p1;
wire   [5:0] b_1_cast_cast1_fu_218_p3;
wire   [0:0] tmp_6_1_fu_234_p2;
wire   [1:0] a_2_1_fu_210_p3;
wire   [1:0] a_3_1_fu_246_p3;
wire   [5:0] c_4_1_fu_240_p2;
wire  signed [29:0] tmp_2_fu_272_p1;
wire  signed [29:0] tmp_3_fu_276_p1;
wire   [3:0] tmp_4_2_fu_422_p3;
wire   [3:0] b_2_fu_429_p2;
wire   [31:0] c_3_2_fu_416_p3;
wire   [31:0] b_2_cast_fu_435_p1;
wire   [0:0] tmp_6_2_fu_439_p2;
wire   [29:0] tmp_8_fu_445_p3;
wire   [29:0] tmp_10_fu_451_p1;
wire   [29:0] tmp_7_fu_461_p3;
wire   [29:0] tmp_14_fu_467_p2;
wire   [29:0] tmp_9_fu_473_p3;
wire   [4:0] tmp_4_3_fu_492_p4;
wire   [4:0] b_3_fu_501_p2;
wire   [31:0] c_3_3_fu_485_p3;
wire   [31:0] b_3_cast_fu_507_p1;
wire   [27:0] tmp_16_fu_481_p1;
wire   [29:0] tmp_18_fu_517_p3;
wire   [29:0] tmp_20_fu_524_p1;
wire   [29:0] tmp_s_fu_543_p3;
wire   [29:0] tmp_11_fu_549_p3;
wire   [5:0] tmp_4_4_fu_566_p5;
wire   [5:0] b_4_fu_576_p2;
wire   [31:0] c_3_4_fu_559_p3;
wire   [31:0] b_4_cast_fu_582_p1;
wire   [27:0] tmp_26_fu_555_p1;
wire   [0:0] tmp_6_4_fu_586_p2;
wire   [27:0] tmp_32_fu_609_p1;
wire   [29:0] tmp_28_fu_592_p3;
wire   [29:0] tmp_30_fu_599_p1;
wire   [29:0] tmp_13_fu_613_p3;
wire   [29:0] tmp_34_fu_620_p2;
wire   [6:0] tmp_4_5_fu_648_p6;
wire   [6:0] b_5_fu_658_p2;
wire   [31:0] c_3_5_fu_642_p3;
wire   [31:0] b_5_cast_fu_664_p1;
wire   [0:0] tmp_6_5_fu_668_p2;
wire   [29:0] tmp_38_fu_674_p3;
wire   [29:0] tmp_40_fu_680_p1;
wire   [29:0] tmp_17_fu_690_p3;
wire   [29:0] tmp_44_fu_696_p2;
wire   [29:0] tmp_19_fu_702_p3;
wire   [7:0] tmp_4_6_fu_721_p7;
wire   [7:0] b_6_fu_733_p2;
wire   [31:0] c_3_6_fu_714_p3;
wire   [31:0] b_6_cast_fu_739_p1;
wire   [27:0] tmp_46_fu_710_p1;
wire   [29:0] tmp_48_fu_749_p3;
wire   [29:0] tmp_50_fu_756_p1;
wire   [29:0] tmp_21_fu_775_p3;
wire   [29:0] tmp_23_fu_781_p3;
wire   [8:0] tmp_4_7_fu_798_p8;
wire   [8:0] b_7_fu_811_p2;
wire   [31:0] c_3_7_fu_791_p3;
wire   [31:0] b_7_cast_fu_817_p1;
wire   [27:0] tmp_56_fu_787_p1;
wire   [0:0] tmp_6_7_fu_821_p2;
wire   [27:0] tmp_60_fu_844_p1;
wire   [29:0] tmp_58_fu_827_p3;
wire   [29:0] tmp_59_fu_834_p1;
wire   [29:0] tmp_25_fu_848_p3;
wire   [29:0] tmp_61_fu_855_p2;
wire   [9:0] tmp_4_8_fu_883_p9;
wire   [9:0] b_8_fu_896_p2;
wire   [31:0] c_3_8_fu_877_p3;
wire   [31:0] b_8_cast_fu_902_p1;
wire   [0:0] tmp_6_8_fu_906_p2;
wire   [29:0] tmp_63_fu_912_p3;
wire   [29:0] tmp_64_fu_918_p1;
wire   [29:0] tmp_29_fu_928_p3;
wire   [29:0] tmp_66_fu_934_p2;
wire   [29:0] tmp_31_fu_940_p3;
wire   [10:0] tmp_4_9_fu_959_p10;
wire   [10:0] b_9_fu_974_p2;
wire   [31:0] c_3_9_fu_952_p3;
wire   [31:0] b_9_cast_fu_980_p1;
wire   [27:0] tmp_67_fu_948_p1;
wire   [29:0] tmp_68_fu_990_p3;
wire   [29:0] tmp_69_fu_997_p1;
wire   [29:0] tmp_33_fu_1016_p3;
wire   [29:0] tmp_35_fu_1022_p3;
wire   [11:0] tmp_4_s_fu_1039_p11;
wire   [11:0] b_s_fu_1055_p2;
wire   [31:0] c_3_s_fu_1032_p3;
wire   [31:0] b_cast_fu_1061_p1;
wire   [27:0] tmp_72_fu_1028_p1;
wire   [0:0] tmp_6_s_fu_1065_p2;
wire   [27:0] tmp_75_fu_1088_p1;
wire   [29:0] tmp_73_fu_1071_p3;
wire   [29:0] tmp_74_fu_1078_p1;
wire   [29:0] tmp_37_fu_1092_p3;
wire   [29:0] tmp_76_fu_1099_p2;
wire   [12:0] tmp_4_1_fu_1127_p12;
wire   [12:0] b_1_fu_1143_p2;
wire   [31:0] c_3_1_fu_1121_p3;
wire   [31:0] b_10_cast_fu_1149_p1;
wire   [0:0] tmp_6_10_fu_1153_p2;
wire   [29:0] tmp_78_fu_1159_p3;
wire   [29:0] tmp_79_fu_1165_p1;
wire   [29:0] tmp_41_fu_1175_p3;
wire   [29:0] tmp_81_fu_1181_p2;
wire   [29:0] tmp_43_fu_1187_p3;
wire   [13:0] tmp_4_10_fu_1206_p13;
wire   [13:0] b_10_fu_1224_p2;
wire   [31:0] c_3_10_fu_1199_p3;
wire   [31:0] b_11_cast_fu_1230_p1;
wire   [27:0] tmp_82_fu_1195_p1;
wire   [29:0] tmp_83_fu_1240_p3;
wire   [29:0] tmp_84_fu_1247_p1;
wire   [29:0] tmp_45_fu_1266_p3;
wire   [29:0] tmp_47_fu_1272_p3;
wire   [14:0] tmp_4_11_fu_1289_p14;
wire   [14:0] b_11_fu_1308_p2;
wire   [31:0] c_3_11_fu_1282_p3;
wire   [31:0] b_12_cast_fu_1314_p1;
wire   [27:0] tmp_87_fu_1278_p1;
wire   [0:0] tmp_6_12_fu_1318_p2;
wire   [27:0] tmp_90_fu_1341_p1;
wire   [29:0] tmp_88_fu_1324_p3;
wire   [29:0] tmp_89_fu_1331_p1;
wire   [29:0] tmp_49_fu_1345_p3;
wire   [29:0] tmp_91_fu_1352_p2;
wire   [15:0] tmp_4_12_fu_1376_p15;
wire   [15:0] b_12_fu_1395_p2;
wire   [31:0] c_3_12_fu_1370_p3;
wire   [31:0] b_13_cast_fu_1401_p1;
wire   [0:0] tmp_6_13_fu_1405_p2;
wire   [27:0] tmp_96_fu_1430_p1;
wire   [29:0] tmp_93_fu_1411_p3;
wire   [29:0] tmp_94_fu_1417_p1;
wire   [29:0] tmp_53_fu_1433_p3;
wire   [29:0] tmp_97_fu_1440_p2;
wire   [29:0] tmp_55_fu_1446_p3;
wire   [1:0] tmp_95_fu_1427_p1;
wire   [16:0] tmp_4_13_fu_1462_p16;
wire   [16:0] b_13_fu_1483_p2;
wire   [31:0] c_3_13_fu_1454_p3;
wire   [31:0] b_14_cast_fu_1489_p1;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_893;
wire   [0:0] rev4_fu_1499_p2;
reg   [10:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'b1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        a_1_1_reg_1529 <= a_1_1_fu_254_p3;
        tmp_12_reg_1572 <= tmp_12_fu_302_p1;
        tmp_16_cast_reg_1548 <= {{value_r[ap_const_lv32_1B : ap_const_lv32_1A]}};
        tmp_17_cast_reg_1565 <= {{value_r[ap_const_lv32_19 : ap_const_lv32_18]}};
        tmp_18_cast_reg_1577 <= {{value_r[ap_const_lv32_17 : ap_const_lv32_16]}};
        tmp_19_cast_reg_1584 <= {{value_r[ap_const_lv32_15 : ap_const_lv32_14]}};
        tmp_20_cast_reg_1591 <= {{value_r[ap_const_lv32_13 : ap_const_lv32_12]}};
        tmp_22_cast_reg_1598 <= {{value_r[ap_const_lv32_11 : ap_const_lv32_10]}};
        tmp_23_cast_reg_1605 <= {{value_r[ap_const_lv32_F : ap_const_lv32_E]}};
        tmp_24_cast_reg_1612 <= {{value_r[ap_const_lv32_D : ap_const_lv32_C]}};
        tmp_25_cast_reg_1619 <= {{value_r[ap_const_lv32_B : ap_const_lv32_A]}};
        tmp_26_cast_reg_1626 <= {{value_r[ap_const_lv32_9 : ap_const_lv32_8]}};
        tmp_27_cast_reg_1633 <= {{value_r[ap_const_lv32_7 : ap_const_lv32_6]}};
        tmp_28_cast_reg_1640 <= {{value_r[ap_const_lv32_5 : ap_const_lv32_4]}};
        tmp_29_cast_reg_1647 <= {{value_r[ap_const_lv32_3 : ap_const_lv32_2]}};
        tmp_4_reg_1555 <= tmp_4_fu_280_p3;
        tmp_5_reg_1560 <= tmp_5_fu_288_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        not_tmp_6_10_reg_1891 <= not_tmp_6_10_fu_1261_p2;
        not_tmp_6_11_reg_1898 <= not_tmp_6_11_fu_1335_p2;
        tmp_51_reg_1905 <= tmp_51_fu_1358_p3;
        tmp_92_reg_1911 <= tmp_92_fu_1366_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        not_tmp_6_12_reg_1916 <= not_tmp_6_12_fu_1421_p2;
        ult_reg_1921 <= ult_fu_1493_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        not_tmp_6_1_reg_1867 <= not_tmp_6_1_fu_1169_p2;
        tmp_6_11_reg_1875 <= tmp_6_11_fu_1234_p2;
        tmp_85_reg_1881 <= tmp_85_fu_1251_p1;
        tmp_86_reg_1886 <= tmp_86_fu_1255_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        not_tmp_6_2_reg_1654 <= not_tmp_6_2_fu_455_p2;
        tmp_22_reg_1677 <= tmp_22_fu_528_p1;
        tmp_24_reg_1682 <= tmp_24_fu_532_p2;
        tmp_6_3_reg_1671 <= tmp_6_3_fu_511_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        not_tmp_6_3_reg_1687 <= not_tmp_6_3_fu_538_p2;
        not_tmp_6_4_reg_1703 <= not_tmp_6_4_fu_603_p2;
        tmp_15_reg_1719 <= tmp_15_fu_626_p3;
        tmp_36_reg_1724 <= tmp_36_fu_634_p1;
        tmp_42_reg_1729 <= tmp_42_fu_638_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        not_tmp_6_5_reg_1734 <= not_tmp_6_5_fu_684_p2;
        tmp_52_reg_1754 <= tmp_52_fu_760_p1;
        tmp_54_reg_1759 <= tmp_54_fu_764_p2;
        tmp_6_6_reg_1748 <= tmp_6_6_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        not_tmp_6_6_reg_1764 <= not_tmp_6_6_fu_770_p2;
        not_tmp_6_7_reg_1777 <= not_tmp_6_7_fu_838_p2;
        tmp_27_reg_1790 <= tmp_27_fu_861_p3;
        tmp_62_reg_1795 <= tmp_62_fu_869_p1;
        tmp_65_reg_1800 <= tmp_65_fu_873_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        not_tmp_6_8_reg_1805 <= not_tmp_6_8_fu_922_p2;
        tmp_6_9_reg_1816 <= tmp_6_9_fu_984_p2;
        tmp_70_reg_1822 <= tmp_70_fu_1001_p1;
        tmp_71_reg_1827 <= tmp_71_fu_1005_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        not_tmp_6_9_reg_1832 <= not_tmp_6_9_fu_1011_p2;
        not_tmp_6_s_reg_1842 <= not_tmp_6_s_fu_1082_p2;
        tmp_39_reg_1852 <= tmp_39_fu_1105_p3;
        tmp_77_reg_1857 <= tmp_77_fu_1113_p1;
        tmp_80_reg_1862 <= tmp_80_fu_1117_p1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_207) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_893) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_28) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_81) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_96) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_113) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_128) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_145) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_160) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_177) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_192) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_1_1_fu_254_p3 = ((tmp_6_1_fu_234_p2[0:0] === 1'b1) ? a_2_1_fu_210_p3 : a_3_1_fu_246_p3);

assign a_2_1_fu_210_p3 = ((tmp_6_fu_168_p2[0:0] === 1'b1) ? ap_const_lv2_0 : ap_const_lv2_2);

assign a_3_1_fu_246_p3 = ((tmp_6_fu_168_p2[0:0] === 1'b1) ? ap_const_lv2_1 : ap_const_lv2_3);

assign ap_return = {{{{{{{{{{{{{{{a_1_1_reg_1529}, {not_tmp_6_2_reg_1654}}, {not_tmp_6_3_reg_1687}}, {not_tmp_6_4_reg_1703}}, {not_tmp_6_5_reg_1734}}, {not_tmp_6_6_reg_1764}}, {not_tmp_6_7_reg_1777}}, {not_tmp_6_8_reg_1805}}, {not_tmp_6_9_reg_1832}}, {not_tmp_6_s_reg_1842}}, {not_tmp_6_1_reg_1867}}, {not_tmp_6_10_reg_1891}}, {not_tmp_6_11_reg_1898}}, {not_tmp_6_12_reg_1916}}, {rev4_fu_1499_p2}};

always @ (*) begin
    ap_sig_113 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_128 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_145 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_160 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_177 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_192 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_207 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_28 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_81 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_893 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_96 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign b_10_cast_fu_1149_p1 = b_1_fu_1143_p2;

assign b_10_fu_1224_p2 = (tmp_4_10_fu_1206_p13 | ap_const_lv14_1);

assign b_11_cast_fu_1230_p1 = b_10_fu_1224_p2;

assign b_11_fu_1308_p2 = (tmp_4_11_fu_1289_p14 | ap_const_lv15_1);

assign b_12_cast_fu_1314_p1 = b_11_fu_1308_p2;

assign b_12_fu_1395_p2 = (tmp_4_12_fu_1376_p15 | ap_const_lv16_1);

assign b_13_cast_fu_1401_p1 = b_12_fu_1395_p2;

assign b_13_fu_1483_p2 = (tmp_4_13_fu_1462_p16 | ap_const_lv17_1);

assign b_14_cast_fu_1489_p1 = b_13_fu_1483_p2;

assign b_1_cast_cast1_fu_218_p3 = ((tmp_6_fu_168_p2[0:0] === 1'b1) ? ap_const_lv6_1 : ap_const_lv6_5);

assign b_1_cast_cast_fu_226_p3 = ((tmp_6_fu_168_p2[0:0] === 1'b1) ? ap_const_lv5_1 : ap_const_lv5_5);

assign b_1_fu_1143_p2 = (tmp_4_1_fu_1127_p12 | ap_const_lv13_1);

assign b_2_cast_fu_435_p1 = b_2_fu_429_p2;

assign b_2_fu_429_p2 = (tmp_4_2_fu_422_p3 | ap_const_lv4_1);

assign b_3_cast_fu_507_p1 = b_3_fu_501_p2;

assign b_3_fu_501_p2 = (tmp_4_3_fu_492_p4 | ap_const_lv5_1);

assign b_4_cast_fu_582_p1 = b_4_fu_576_p2;

assign b_4_fu_576_p2 = (tmp_4_4_fu_566_p5 | ap_const_lv6_1);

assign b_5_cast_fu_664_p1 = b_5_fu_658_p2;

assign b_5_fu_658_p2 = (tmp_4_5_fu_648_p6 | ap_const_lv7_1);

assign b_6_cast_fu_739_p1 = b_6_fu_733_p2;

assign b_6_fu_733_p2 = (tmp_4_6_fu_721_p7 | ap_const_lv8_1);

assign b_7_cast_fu_817_p1 = b_7_fu_811_p2;

assign b_7_fu_811_p2 = (tmp_4_7_fu_798_p8 | ap_const_lv9_1);

assign b_8_cast_fu_902_p1 = b_8_fu_896_p2;

assign b_8_fu_896_p2 = (tmp_4_8_fu_883_p9 | ap_const_lv10_1);

assign b_9_cast_fu_980_p1 = b_9_fu_974_p2;

assign b_9_fu_974_p2 = (tmp_4_9_fu_959_p10 | ap_const_lv11_1);

assign b_cast_fu_1061_p1 = b_s_fu_1055_p2;

assign b_s_fu_1055_p2 = (tmp_4_s_fu_1039_p11 | ap_const_lv12_1);

assign c_1_fu_180_p3 = ((tmp_6_fu_168_p2[0:0] === 1'b1) ? ap_const_lv3_0 : c_4_fu_174_p2);

assign c_3_10_fu_1199_p3 = {{tmp_43_fu_1187_p3}, {tmp_27_cast_reg_1633}};

assign c_3_11_fu_1282_p3 = {{tmp_47_fu_1272_p3}, {tmp_28_cast_reg_1640}};

assign c_3_12_fu_1370_p3 = {{tmp_51_reg_1905}, {tmp_29_cast_reg_1647}};

assign c_3_13_fu_1454_p3 = {{tmp_55_fu_1446_p3}, {tmp_95_fu_1427_p1}};

assign c_3_1_cast2_fu_206_p1 = $signed(tmp_fu_198_p3);

assign c_3_1_fu_1121_p3 = {{tmp_39_reg_1852}, {tmp_26_cast_reg_1626}};

assign c_3_2_fu_416_p3 = {{tmp_4_reg_1555}, {tmp_16_cast_reg_1548}};

assign c_3_3_fu_485_p3 = {{tmp_9_fu_473_p3}, {tmp_17_cast_reg_1565}};

assign c_3_4_fu_559_p3 = {{tmp_11_fu_549_p3}, {tmp_18_cast_reg_1577}};

assign c_3_5_fu_642_p3 = {{tmp_15_reg_1719}, {tmp_19_cast_reg_1584}};

assign c_3_6_fu_714_p3 = {{tmp_19_fu_702_p3}, {tmp_20_cast_reg_1591}};

assign c_3_7_fu_791_p3 = {{tmp_23_fu_781_p3}, {tmp_22_cast_reg_1598}};

assign c_3_8_fu_877_p3 = {{tmp_27_reg_1790}, {tmp_23_cast_reg_1605}};

assign c_3_9_fu_952_p3 = {{tmp_31_fu_940_p3}, {tmp_24_cast_reg_1612}};

assign c_3_s_fu_1032_p3 = {{tmp_35_fu_1022_p3}, {tmp_25_cast_reg_1619}};

assign c_4_1_fu_240_p2 = ($signed(c_3_1_cast2_fu_206_p1) - $signed(b_1_cast_cast1_fu_218_p3));

assign c_4_fu_174_p2 = ($signed(tmp1_cast_fu_164_p1) + $signed(ap_const_lv3_7));

assign not_tmp_6_10_fu_1261_p2 = (tmp_6_11_reg_1875 ^ 1'b1);

assign not_tmp_6_11_fu_1335_p2 = (tmp_6_12_fu_1318_p2 ^ 1'b1);

assign not_tmp_6_12_fu_1421_p2 = (tmp_6_13_fu_1405_p2 ^ 1'b1);

assign not_tmp_6_1_fu_1169_p2 = (tmp_6_10_fu_1153_p2 ^ 1'b1);

assign not_tmp_6_2_fu_455_p2 = (tmp_6_2_fu_439_p2 ^ 1'b1);

assign not_tmp_6_3_fu_538_p2 = (tmp_6_3_reg_1671 ^ 1'b1);

assign not_tmp_6_4_fu_603_p2 = (tmp_6_4_fu_586_p2 ^ 1'b1);

assign not_tmp_6_5_fu_684_p2 = (tmp_6_5_fu_668_p2 ^ 1'b1);

assign not_tmp_6_6_fu_770_p2 = (tmp_6_6_reg_1748 ^ 1'b1);

assign not_tmp_6_7_fu_838_p2 = (tmp_6_7_fu_821_p2 ^ 1'b1);

assign not_tmp_6_8_fu_922_p2 = (tmp_6_8_fu_906_p2 ^ 1'b1);

assign not_tmp_6_9_fu_1011_p2 = (tmp_6_9_reg_1816 ^ 1'b1);

assign not_tmp_6_s_fu_1082_p2 = (tmp_6_s_fu_1065_p2 ^ 1'b1);

assign rev4_fu_1499_p2 = (ult_reg_1921 ^ 1'b1);

assign tmp1_cast_fu_164_p1 = tmp_1_fu_154_p4;

assign tmp_10_fu_451_p1 = b_2_fu_429_p2;

assign tmp_11_fu_549_p3 = ((tmp_6_3_reg_1671[0:0] === 1'b1) ? tmp_s_fu_543_p3 : tmp_24_reg_1682);

assign tmp_12_fu_302_p1 = tmp_4_fu_280_p3[27:0];

assign tmp_13_fu_613_p3 = {{tmp_32_fu_609_p1}, {tmp_18_cast_reg_1577}};

assign tmp_14_fu_467_p2 = (tmp_8_fu_445_p3 - tmp_10_fu_451_p1);

assign tmp_15_fu_626_p3 = ((tmp_6_4_fu_586_p2[0:0] === 1'b1) ? tmp_13_fu_613_p3 : tmp_34_fu_620_p2);

assign tmp_16_fu_481_p1 = tmp_9_fu_473_p3[27:0];

assign tmp_17_fu_690_p3 = {{tmp_42_reg_1729}, {tmp_19_cast_reg_1584}};

assign tmp_18_fu_517_p3 = {{tmp_16_fu_481_p1}, {tmp_17_cast_reg_1565}};

assign tmp_19_fu_702_p3 = ((tmp_6_5_fu_668_p2[0:0] === 1'b1) ? tmp_17_fu_690_p3 : tmp_44_fu_696_p2);

assign tmp_1_fu_154_p4 = {{value_r[ap_const_lv32_1F : ap_const_lv32_1E]}};

assign tmp_20_fu_524_p1 = b_3_fu_501_p2;

assign tmp_21_fu_775_p3 = {{tmp_52_reg_1754}, {tmp_20_cast_reg_1591}};

assign tmp_22_fu_528_p1 = tmp_9_fu_473_p3[27:0];

assign tmp_23_fu_781_p3 = ((tmp_6_6_reg_1748[0:0] === 1'b1) ? tmp_21_fu_775_p3 : tmp_54_reg_1759);

assign tmp_24_fu_532_p2 = (tmp_18_fu_517_p3 - tmp_20_fu_524_p1);

assign tmp_25_fu_848_p3 = {{tmp_60_fu_844_p1}, {tmp_22_cast_reg_1598}};

assign tmp_26_fu_555_p1 = tmp_11_fu_549_p3[27:0];

assign tmp_27_fu_861_p3 = ((tmp_6_7_fu_821_p2[0:0] === 1'b1) ? tmp_25_fu_848_p3 : tmp_61_fu_855_p2);

assign tmp_28_fu_592_p3 = {{tmp_26_fu_555_p1}, {tmp_18_cast_reg_1577}};

assign tmp_29_fu_928_p3 = {{tmp_65_reg_1800}, {tmp_23_cast_reg_1605}};

assign tmp_2_fu_272_p1 = $signed(tmp_fu_198_p3);

assign tmp_30_fu_599_p1 = b_4_fu_576_p2;

assign tmp_31_fu_940_p3 = ((tmp_6_8_fu_906_p2[0:0] === 1'b1) ? tmp_29_fu_928_p3 : tmp_66_fu_934_p2);

assign tmp_32_fu_609_p1 = tmp_11_fu_549_p3[27:0];

assign tmp_33_fu_1016_p3 = {{tmp_70_reg_1822}, {tmp_24_cast_reg_1612}};

assign tmp_34_fu_620_p2 = (tmp_28_fu_592_p3 - tmp_30_fu_599_p1);

assign tmp_35_fu_1022_p3 = ((tmp_6_9_reg_1816[0:0] === 1'b1) ? tmp_33_fu_1016_p3 : tmp_71_reg_1827);

assign tmp_36_fu_634_p1 = tmp_15_fu_626_p3[27:0];

assign tmp_37_fu_1092_p3 = {{tmp_75_fu_1088_p1}, {tmp_25_cast_reg_1619}};

assign tmp_38_fu_674_p3 = {{tmp_36_reg_1724}, {tmp_19_cast_reg_1584}};

assign tmp_39_fu_1105_p3 = ((tmp_6_s_fu_1065_p2[0:0] === 1'b1) ? tmp_37_fu_1092_p3 : tmp_76_fu_1099_p2);

assign tmp_3_fu_276_p1 = $signed(c_4_1_fu_240_p2);

assign tmp_40_fu_680_p1 = b_5_fu_658_p2;

assign tmp_41_fu_1175_p3 = {{tmp_80_reg_1862}, {tmp_26_cast_reg_1626}};

assign tmp_42_fu_638_p1 = tmp_15_fu_626_p3[27:0];

assign tmp_43_fu_1187_p3 = ((tmp_6_10_fu_1153_p2[0:0] === 1'b1) ? tmp_41_fu_1175_p3 : tmp_81_fu_1181_p2);

assign tmp_44_fu_696_p2 = (tmp_38_fu_674_p3 - tmp_40_fu_680_p1);

assign tmp_45_fu_1266_p3 = {{tmp_85_reg_1881}, {tmp_27_cast_reg_1633}};

assign tmp_46_fu_710_p1 = tmp_19_fu_702_p3[27:0];

assign tmp_47_fu_1272_p3 = ((tmp_6_11_reg_1875[0:0] === 1'b1) ? tmp_45_fu_1266_p3 : tmp_86_reg_1886);

assign tmp_48_fu_749_p3 = {{tmp_46_fu_710_p1}, {tmp_20_cast_reg_1591}};

assign tmp_49_fu_1345_p3 = {{tmp_90_fu_1341_p1}, {tmp_28_cast_reg_1640}};

assign tmp_4_10_fu_1206_p13 = {{{{{{{{{{{{a_1_1_reg_1529}, {not_tmp_6_2_reg_1654}}, {not_tmp_6_3_reg_1687}}, {not_tmp_6_4_reg_1703}}, {not_tmp_6_5_reg_1734}}, {not_tmp_6_6_reg_1764}}, {not_tmp_6_7_reg_1777}}, {not_tmp_6_8_reg_1805}}, {not_tmp_6_9_reg_1832}}, {not_tmp_6_s_reg_1842}}, {not_tmp_6_1_fu_1169_p2}}, {ap_const_lv2_0}};

assign tmp_4_11_fu_1289_p14 = {{{{{{{{{{{{{a_1_1_reg_1529}, {not_tmp_6_2_reg_1654}}, {not_tmp_6_3_reg_1687}}, {not_tmp_6_4_reg_1703}}, {not_tmp_6_5_reg_1734}}, {not_tmp_6_6_reg_1764}}, {not_tmp_6_7_reg_1777}}, {not_tmp_6_8_reg_1805}}, {not_tmp_6_9_reg_1832}}, {not_tmp_6_s_reg_1842}}, {not_tmp_6_1_reg_1867}}, {not_tmp_6_10_fu_1261_p2}}, {ap_const_lv2_0}};

assign tmp_4_12_fu_1376_p15 = {{{{{{{{{{{{{{a_1_1_reg_1529}, {not_tmp_6_2_reg_1654}}, {not_tmp_6_3_reg_1687}}, {not_tmp_6_4_reg_1703}}, {not_tmp_6_5_reg_1734}}, {not_tmp_6_6_reg_1764}}, {not_tmp_6_7_reg_1777}}, {not_tmp_6_8_reg_1805}}, {not_tmp_6_9_reg_1832}}, {not_tmp_6_s_reg_1842}}, {not_tmp_6_1_reg_1867}}, {not_tmp_6_10_reg_1891}}, {not_tmp_6_11_reg_1898}}, {ap_const_lv2_0}};

assign tmp_4_13_fu_1462_p16 = {{{{{{{{{{{{{{{a_1_1_reg_1529}, {not_tmp_6_2_reg_1654}}, {not_tmp_6_3_reg_1687}}, {not_tmp_6_4_reg_1703}}, {not_tmp_6_5_reg_1734}}, {not_tmp_6_6_reg_1764}}, {not_tmp_6_7_reg_1777}}, {not_tmp_6_8_reg_1805}}, {not_tmp_6_9_reg_1832}}, {not_tmp_6_s_reg_1842}}, {not_tmp_6_1_reg_1867}}, {not_tmp_6_10_reg_1891}}, {not_tmp_6_11_reg_1898}}, {not_tmp_6_12_fu_1421_p2}}, {ap_const_lv2_0}};

assign tmp_4_1_fu_1127_p12 = {{{{{{{{{{{a_1_1_reg_1529}, {not_tmp_6_2_reg_1654}}, {not_tmp_6_3_reg_1687}}, {not_tmp_6_4_reg_1703}}, {not_tmp_6_5_reg_1734}}, {not_tmp_6_6_reg_1764}}, {not_tmp_6_7_reg_1777}}, {not_tmp_6_8_reg_1805}}, {not_tmp_6_9_reg_1832}}, {not_tmp_6_s_reg_1842}}, {ap_const_lv2_0}};

assign tmp_4_2_fu_422_p3 = {{a_1_1_reg_1529}, {ap_const_lv2_0}};

assign tmp_4_3_fu_492_p4 = {{{a_1_1_reg_1529}, {not_tmp_6_2_fu_455_p2}}, {ap_const_lv2_0}};

assign tmp_4_4_fu_566_p5 = {{{{a_1_1_reg_1529}, {not_tmp_6_2_reg_1654}}, {not_tmp_6_3_fu_538_p2}}, {ap_const_lv2_0}};

assign tmp_4_5_fu_648_p6 = {{{{{a_1_1_reg_1529}, {not_tmp_6_2_reg_1654}}, {not_tmp_6_3_reg_1687}}, {not_tmp_6_4_reg_1703}}, {ap_const_lv2_0}};

assign tmp_4_6_fu_721_p7 = {{{{{{a_1_1_reg_1529}, {not_tmp_6_2_reg_1654}}, {not_tmp_6_3_reg_1687}}, {not_tmp_6_4_reg_1703}}, {not_tmp_6_5_fu_684_p2}}, {ap_const_lv2_0}};

assign tmp_4_7_fu_798_p8 = {{{{{{{a_1_1_reg_1529}, {not_tmp_6_2_reg_1654}}, {not_tmp_6_3_reg_1687}}, {not_tmp_6_4_reg_1703}}, {not_tmp_6_5_reg_1734}}, {not_tmp_6_6_fu_770_p2}}, {ap_const_lv2_0}};

assign tmp_4_8_fu_883_p9 = {{{{{{{{a_1_1_reg_1529}, {not_tmp_6_2_reg_1654}}, {not_tmp_6_3_reg_1687}}, {not_tmp_6_4_reg_1703}}, {not_tmp_6_5_reg_1734}}, {not_tmp_6_6_reg_1764}}, {not_tmp_6_7_reg_1777}}, {ap_const_lv2_0}};

assign tmp_4_9_fu_959_p10 = {{{{{{{{{a_1_1_reg_1529}, {not_tmp_6_2_reg_1654}}, {not_tmp_6_3_reg_1687}}, {not_tmp_6_4_reg_1703}}, {not_tmp_6_5_reg_1734}}, {not_tmp_6_6_reg_1764}}, {not_tmp_6_7_reg_1777}}, {not_tmp_6_8_fu_922_p2}}, {ap_const_lv2_0}};

assign tmp_4_cast_fu_188_p4 = {{value_r[ap_const_lv32_1D : ap_const_lv32_1C]}};

assign tmp_4_fu_280_p3 = ((tmp_6_1_fu_234_p2[0:0] === 1'b1) ? tmp_2_fu_272_p1 : tmp_3_fu_276_p1);

assign tmp_4_s_fu_1039_p11 = {{{{{{{{{{a_1_1_reg_1529}, {not_tmp_6_2_reg_1654}}, {not_tmp_6_3_reg_1687}}, {not_tmp_6_4_reg_1703}}, {not_tmp_6_5_reg_1734}}, {not_tmp_6_6_reg_1764}}, {not_tmp_6_7_reg_1777}}, {not_tmp_6_8_reg_1805}}, {not_tmp_6_9_fu_1011_p2}}, {ap_const_lv2_0}};

assign tmp_50_fu_756_p1 = b_6_fu_733_p2;

assign tmp_51_fu_1358_p3 = ((tmp_6_12_fu_1318_p2[0:0] === 1'b1) ? tmp_49_fu_1345_p3 : tmp_91_fu_1352_p2);

assign tmp_52_fu_760_p1 = tmp_19_fu_702_p3[27:0];

assign tmp_53_fu_1433_p3 = {{tmp_96_fu_1430_p1}, {tmp_29_cast_reg_1647}};

assign tmp_54_fu_764_p2 = (tmp_48_fu_749_p3 - tmp_50_fu_756_p1);

assign tmp_55_fu_1446_p3 = ((tmp_6_13_fu_1405_p2[0:0] === 1'b1) ? tmp_53_fu_1433_p3 : tmp_97_fu_1440_p2);

assign tmp_56_fu_787_p1 = tmp_23_fu_781_p3[27:0];

assign tmp_58_fu_827_p3 = {{tmp_56_fu_787_p1}, {tmp_22_cast_reg_1598}};

assign tmp_59_fu_834_p1 = b_7_fu_811_p2;

assign tmp_5_fu_288_p1 = tmp_4_fu_280_p3[27:0];

assign tmp_60_fu_844_p1 = tmp_23_fu_781_p3[27:0];

assign tmp_61_fu_855_p2 = (tmp_58_fu_827_p3 - tmp_59_fu_834_p1);

assign tmp_62_fu_869_p1 = tmp_27_fu_861_p3[27:0];

assign tmp_63_fu_912_p3 = {{tmp_62_reg_1795}, {tmp_23_cast_reg_1605}};

assign tmp_64_fu_918_p1 = b_8_fu_896_p2;

assign tmp_65_fu_873_p1 = tmp_27_fu_861_p3[27:0];

assign tmp_66_fu_934_p2 = (tmp_63_fu_912_p3 - tmp_64_fu_918_p1);

assign tmp_67_fu_948_p1 = tmp_31_fu_940_p3[27:0];

assign tmp_68_fu_990_p3 = {{tmp_67_fu_948_p1}, {tmp_24_cast_reg_1612}};

assign tmp_69_fu_997_p1 = b_9_fu_974_p2;

assign tmp_6_10_fu_1153_p2 = ((c_3_1_fu_1121_p3 < b_10_cast_fu_1149_p1) ? 1'b1 : 1'b0);

assign tmp_6_11_fu_1234_p2 = ((c_3_10_fu_1199_p3 < b_11_cast_fu_1230_p1) ? 1'b1 : 1'b0);

assign tmp_6_12_fu_1318_p2 = ((c_3_11_fu_1282_p3 < b_12_cast_fu_1314_p1) ? 1'b1 : 1'b0);

assign tmp_6_13_fu_1405_p2 = ((c_3_12_fu_1370_p3 < b_13_cast_fu_1401_p1) ? 1'b1 : 1'b0);

assign tmp_6_1_fu_234_p2 = ((tmp_fu_198_p3 < b_1_cast_cast_fu_226_p3) ? 1'b1 : 1'b0);

assign tmp_6_2_fu_439_p2 = ((c_3_2_fu_416_p3 < b_2_cast_fu_435_p1) ? 1'b1 : 1'b0);

assign tmp_6_3_fu_511_p2 = ((c_3_3_fu_485_p3 < b_3_cast_fu_507_p1) ? 1'b1 : 1'b0);

assign tmp_6_4_fu_586_p2 = ((c_3_4_fu_559_p3 < b_4_cast_fu_582_p1) ? 1'b1 : 1'b0);

assign tmp_6_5_fu_668_p2 = ((c_3_5_fu_642_p3 < b_5_cast_fu_664_p1) ? 1'b1 : 1'b0);

assign tmp_6_6_fu_743_p2 = ((c_3_6_fu_714_p3 < b_6_cast_fu_739_p1) ? 1'b1 : 1'b0);

assign tmp_6_7_fu_821_p2 = ((c_3_7_fu_791_p3 < b_7_cast_fu_817_p1) ? 1'b1 : 1'b0);

assign tmp_6_8_fu_906_p2 = ((c_3_8_fu_877_p3 < b_8_cast_fu_902_p1) ? 1'b1 : 1'b0);

assign tmp_6_9_fu_984_p2 = ((c_3_9_fu_952_p3 < b_9_cast_fu_980_p1) ? 1'b1 : 1'b0);

assign tmp_6_fu_168_p2 = ((tmp_1_fu_154_p4 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign tmp_6_s_fu_1065_p2 = ((c_3_s_fu_1032_p3 < b_cast_fu_1061_p1) ? 1'b1 : 1'b0);

assign tmp_70_fu_1001_p1 = tmp_31_fu_940_p3[27:0];

assign tmp_71_fu_1005_p2 = (tmp_68_fu_990_p3 - tmp_69_fu_997_p1);

assign tmp_72_fu_1028_p1 = tmp_35_fu_1022_p3[27:0];

assign tmp_73_fu_1071_p3 = {{tmp_72_fu_1028_p1}, {tmp_25_cast_reg_1619}};

assign tmp_74_fu_1078_p1 = b_s_fu_1055_p2;

assign tmp_75_fu_1088_p1 = tmp_35_fu_1022_p3[27:0];

assign tmp_76_fu_1099_p2 = (tmp_73_fu_1071_p3 - tmp_74_fu_1078_p1);

assign tmp_77_fu_1113_p1 = tmp_39_fu_1105_p3[27:0];

assign tmp_78_fu_1159_p3 = {{tmp_77_reg_1857}, {tmp_26_cast_reg_1626}};

assign tmp_79_fu_1165_p1 = b_1_fu_1143_p2;

assign tmp_7_fu_461_p3 = {{tmp_12_reg_1572}, {tmp_16_cast_reg_1548}};

assign tmp_80_fu_1117_p1 = tmp_39_fu_1105_p3[27:0];

assign tmp_81_fu_1181_p2 = (tmp_78_fu_1159_p3 - tmp_79_fu_1165_p1);

assign tmp_82_fu_1195_p1 = tmp_43_fu_1187_p3[27:0];

assign tmp_83_fu_1240_p3 = {{tmp_82_fu_1195_p1}, {tmp_27_cast_reg_1633}};

assign tmp_84_fu_1247_p1 = b_10_fu_1224_p2;

assign tmp_85_fu_1251_p1 = tmp_43_fu_1187_p3[27:0];

assign tmp_86_fu_1255_p2 = (tmp_83_fu_1240_p3 - tmp_84_fu_1247_p1);

assign tmp_87_fu_1278_p1 = tmp_47_fu_1272_p3[27:0];

assign tmp_88_fu_1324_p3 = {{tmp_87_fu_1278_p1}, {tmp_28_cast_reg_1640}};

assign tmp_89_fu_1331_p1 = b_11_fu_1308_p2;

assign tmp_8_fu_445_p3 = {{tmp_5_reg_1560}, {tmp_16_cast_reg_1548}};

assign tmp_90_fu_1341_p1 = tmp_47_fu_1272_p3[27:0];

assign tmp_91_fu_1352_p2 = (tmp_88_fu_1324_p3 - tmp_89_fu_1331_p1);

assign tmp_92_fu_1366_p1 = tmp_51_fu_1358_p3[27:0];

assign tmp_93_fu_1411_p3 = {{tmp_92_reg_1911}, {tmp_29_cast_reg_1647}};

assign tmp_94_fu_1417_p1 = b_12_fu_1395_p2;

assign tmp_95_fu_1427_p1 = value_r[1:0];

assign tmp_96_fu_1430_p1 = tmp_51_reg_1905[27:0];

assign tmp_97_fu_1440_p2 = (tmp_93_fu_1411_p3 - tmp_94_fu_1417_p1);

assign tmp_9_fu_473_p3 = ((tmp_6_2_fu_439_p2[0:0] === 1'b1) ? tmp_7_fu_461_p3 : tmp_14_fu_467_p2);

assign tmp_fu_198_p3 = {{c_1_fu_180_p3}, {tmp_4_cast_fu_188_p4}};

assign tmp_s_fu_543_p3 = {{tmp_22_reg_1677}, {tmp_17_cast_reg_1565}};

assign ult_fu_1493_p2 = ((c_3_13_fu_1454_p3 < b_14_cast_fu_1489_p1) ? 1'b1 : 1'b0);

endmodule //detect_face_int_sqrt

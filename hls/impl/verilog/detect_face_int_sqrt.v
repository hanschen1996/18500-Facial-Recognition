// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module detect_face_int_sqrt (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        value_r,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_st2_fsm_1 = 3'b10;
parameter    ap_ST_st3_fsm_2 = 3'b100;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv3_7 = 3'b111;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv6_5 = 6'b101;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv5_5 = 5'b101;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv13_1 = 13'b1;
parameter    ap_const_lv14_1 = 14'b1;
parameter    ap_const_lv15_1 = 15'b1;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv17_1 = 17'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] value_r;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_20;
wire   [0:0] tmp_6_fu_168_p2;
reg   [0:0] tmp_6_reg_1605;
wire   [2:0] c_1_fu_180_p3;
reg   [2:0] c_1_reg_1613;
reg   [1:0] tmp_4_cast_reg_1618;
reg   [1:0] tmp_16_cast_reg_1623;
reg   [1:0] tmp_17_cast_reg_1630;
reg   [1:0] tmp_18_cast_reg_1637;
reg   [1:0] tmp_19_cast_reg_1644;
reg   [1:0] tmp_20_cast_reg_1651;
reg   [1:0] tmp_22_cast_reg_1658;
reg   [1:0] tmp_23_cast_reg_1665;
reg   [1:0] tmp_24_cast_reg_1672;
reg   [1:0] tmp_25_cast_reg_1679;
reg   [1:0] tmp_26_cast_reg_1686;
reg   [1:0] tmp_27_cast_reg_1693;
reg   [1:0] tmp_28_cast_reg_1700;
reg   [1:0] tmp_29_cast_reg_1707;
wire   [1:0] a_1_1_fu_378_p3;
reg   [1:0] a_1_1_reg_1714;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_71;
wire   [0:0] not_tmp_6_2_fu_448_p2;
reg   [0:0] not_tmp_6_2_reg_1726;
wire   [0:0] not_tmp_6_3_fu_527_p2;
reg   [0:0] not_tmp_6_3_reg_1738;
wire   [0:0] not_tmp_6_4_fu_608_p2;
reg   [0:0] not_tmp_6_4_reg_1750;
wire   [0:0] not_tmp_6_5_fu_691_p2;
reg   [0:0] not_tmp_6_5_reg_1762;
wire   [0:0] not_tmp_6_6_fu_776_p2;
reg   [0:0] not_tmp_6_6_reg_1774;
wire   [0:0] not_tmp_6_7_fu_863_p2;
reg   [0:0] not_tmp_6_7_reg_1786;
wire   [0:0] tmp_6_8_fu_935_p2;
reg   [0:0] tmp_6_8_reg_1798;
wire   [27:0] tmp_65_fu_952_p1;
reg   [27:0] tmp_65_reg_1804;
wire   [29:0] tmp_66_fu_956_p2;
reg   [29:0] tmp_66_reg_1809;
wire   [1:0] tmp_1_fu_154_p4;
wire   [2:0] tmp1_cast_fu_164_p1;
wire   [2:0] c_4_fu_174_p2;
wire   [4:0] tmp_fu_328_p3;
wire   [4:0] b_1_cast_cast_fu_352_p3;
wire  signed [5:0] c_3_1_cast2_fu_334_p1;
wire   [5:0] b_1_cast_cast1_fu_345_p3;
wire   [0:0] tmp_6_1_fu_359_p2;
wire   [1:0] a_2_1_fu_338_p3;
wire   [1:0] a_3_1_fu_371_p3;
wire   [5:0] c_4_1_fu_365_p2;
wire  signed [29:0] tmp_2_fu_386_p1;
wire  signed [29:0] tmp_3_fu_390_p1;
wire   [29:0] tmp_4_fu_394_p3;
wire   [3:0] tmp_4_2_fu_413_p3;
wire   [3:0] b_2_fu_421_p2;
wire   [31:0] c_3_2_fu_406_p3;
wire   [31:0] b_2_cast_fu_427_p1;
wire   [27:0] tmp_5_fu_402_p1;
wire   [0:0] tmp_6_2_fu_431_p2;
wire   [27:0] tmp_12_fu_454_p1;
wire   [29:0] tmp_8_fu_437_p3;
wire   [29:0] tmp_10_fu_444_p1;
wire   [29:0] tmp_7_fu_458_p3;
wire   [29:0] tmp_14_fu_465_p2;
wire   [29:0] tmp_9_fu_471_p3;
wire   [4:0] tmp_4_3_fu_490_p4;
wire   [4:0] b_3_fu_500_p2;
wire   [31:0] c_3_3_fu_483_p3;
wire   [31:0] b_3_cast_fu_506_p1;
wire   [27:0] tmp_16_fu_479_p1;
wire   [0:0] tmp_6_3_fu_510_p2;
wire   [27:0] tmp_22_fu_533_p1;
wire   [29:0] tmp_18_fu_516_p3;
wire   [29:0] tmp_20_fu_523_p1;
wire   [29:0] tmp_s_fu_537_p3;
wire   [29:0] tmp_24_fu_544_p2;
wire   [29:0] tmp_11_fu_550_p3;
wire   [5:0] tmp_4_4_fu_569_p5;
wire   [5:0] b_4_fu_581_p2;
wire   [31:0] c_3_4_fu_562_p3;
wire   [31:0] b_4_cast_fu_587_p1;
wire   [27:0] tmp_26_fu_558_p1;
wire   [0:0] tmp_6_4_fu_591_p2;
wire   [27:0] tmp_32_fu_614_p1;
wire   [29:0] tmp_28_fu_597_p3;
wire   [29:0] tmp_30_fu_604_p1;
wire   [29:0] tmp_13_fu_618_p3;
wire   [29:0] tmp_34_fu_625_p2;
wire   [29:0] tmp_15_fu_631_p3;
wire   [6:0] tmp_4_5_fu_650_p6;
wire   [6:0] b_5_fu_664_p2;
wire   [31:0] c_3_5_fu_643_p3;
wire   [31:0] b_5_cast_fu_670_p1;
wire   [27:0] tmp_36_fu_639_p1;
wire   [0:0] tmp_6_5_fu_674_p2;
wire   [27:0] tmp_42_fu_697_p1;
wire   [29:0] tmp_38_fu_680_p3;
wire   [29:0] tmp_40_fu_687_p1;
wire   [29:0] tmp_17_fu_701_p3;
wire   [29:0] tmp_44_fu_708_p2;
wire   [29:0] tmp_19_fu_714_p3;
wire   [7:0] tmp_4_6_fu_733_p7;
wire   [7:0] b_6_fu_749_p2;
wire   [31:0] c_3_6_fu_726_p3;
wire   [31:0] b_6_cast_fu_755_p1;
wire   [27:0] tmp_46_fu_722_p1;
wire   [0:0] tmp_6_6_fu_759_p2;
wire   [27:0] tmp_52_fu_782_p1;
wire   [29:0] tmp_48_fu_765_p3;
wire   [29:0] tmp_50_fu_772_p1;
wire   [29:0] tmp_21_fu_786_p3;
wire   [29:0] tmp_54_fu_793_p2;
wire   [29:0] tmp_23_fu_799_p3;
wire   [8:0] tmp_4_7_fu_818_p8;
wire   [8:0] b_7_fu_836_p2;
wire   [31:0] c_3_7_fu_811_p3;
wire   [31:0] b_7_cast_fu_842_p1;
wire   [27:0] tmp_56_fu_807_p1;
wire   [0:0] tmp_6_7_fu_846_p2;
wire   [27:0] tmp_60_fu_869_p1;
wire   [29:0] tmp_58_fu_852_p3;
wire   [29:0] tmp_59_fu_859_p1;
wire   [29:0] tmp_25_fu_873_p3;
wire   [29:0] tmp_61_fu_880_p2;
wire   [29:0] tmp_27_fu_886_p3;
wire   [9:0] tmp_4_8_fu_905_p9;
wire   [9:0] b_8_fu_925_p2;
wire   [31:0] c_3_8_fu_898_p3;
wire   [31:0] b_8_cast_fu_931_p1;
wire   [27:0] tmp_62_fu_894_p1;
wire   [29:0] tmp_63_fu_941_p3;
wire   [29:0] tmp_64_fu_948_p1;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_490;
wire   [29:0] tmp_29_fu_967_p3;
wire   [29:0] tmp_31_fu_973_p3;
wire   [0:0] not_tmp_6_8_fu_962_p2;
wire   [10:0] tmp_4_9_fu_990_p10;
wire   [10:0] b_9_fu_1005_p2;
wire   [31:0] c_3_9_fu_983_p3;
wire   [31:0] b_9_cast_fu_1011_p1;
wire   [27:0] tmp_67_fu_979_p1;
wire   [0:0] tmp_6_9_fu_1015_p2;
wire   [27:0] tmp_70_fu_1038_p1;
wire   [29:0] tmp_68_fu_1021_p3;
wire   [29:0] tmp_69_fu_1028_p1;
wire   [29:0] tmp_33_fu_1042_p3;
wire   [29:0] tmp_71_fu_1049_p2;
wire   [29:0] tmp_35_fu_1055_p3;
wire   [0:0] not_tmp_6_9_fu_1032_p2;
wire   [11:0] tmp_4_s_fu_1074_p11;
wire   [11:0] b_s_fu_1091_p2;
wire   [31:0] c_3_s_fu_1067_p3;
wire   [31:0] b_cast_fu_1097_p1;
wire   [27:0] tmp_72_fu_1063_p1;
wire   [0:0] tmp_6_s_fu_1101_p2;
wire   [27:0] tmp_75_fu_1124_p1;
wire   [29:0] tmp_73_fu_1107_p3;
wire   [29:0] tmp_74_fu_1114_p1;
wire   [29:0] tmp_37_fu_1128_p3;
wire   [29:0] tmp_76_fu_1135_p2;
wire   [29:0] tmp_39_fu_1141_p3;
wire   [0:0] not_tmp_6_s_fu_1118_p2;
wire   [12:0] tmp_4_1_fu_1160_p12;
wire   [12:0] b_1_fu_1179_p2;
wire   [31:0] c_3_1_fu_1153_p3;
wire   [31:0] b_10_cast_fu_1185_p1;
wire   [27:0] tmp_77_fu_1149_p1;
wire   [0:0] tmp_6_10_fu_1189_p2;
wire   [27:0] tmp_80_fu_1212_p1;
wire   [29:0] tmp_78_fu_1195_p3;
wire   [29:0] tmp_79_fu_1202_p1;
wire   [29:0] tmp_41_fu_1216_p3;
wire   [29:0] tmp_81_fu_1223_p2;
wire   [29:0] tmp_43_fu_1229_p3;
wire   [0:0] not_tmp_6_1_fu_1206_p2;
wire   [13:0] tmp_4_10_fu_1248_p13;
wire   [13:0] b_10_fu_1269_p2;
wire   [31:0] c_3_10_fu_1241_p3;
wire   [31:0] b_11_cast_fu_1275_p1;
wire   [27:0] tmp_82_fu_1237_p1;
wire   [0:0] tmp_6_11_fu_1279_p2;
wire   [27:0] tmp_85_fu_1302_p1;
wire   [29:0] tmp_83_fu_1285_p3;
wire   [29:0] tmp_84_fu_1292_p1;
wire   [29:0] tmp_45_fu_1306_p3;
wire   [29:0] tmp_86_fu_1313_p2;
wire   [29:0] tmp_47_fu_1319_p3;
wire   [0:0] not_tmp_6_10_fu_1296_p2;
wire   [14:0] tmp_4_11_fu_1338_p14;
wire   [14:0] b_11_fu_1361_p2;
wire   [31:0] c_3_11_fu_1331_p3;
wire   [31:0] b_12_cast_fu_1367_p1;
wire   [27:0] tmp_87_fu_1327_p1;
wire   [0:0] tmp_6_12_fu_1371_p2;
wire   [27:0] tmp_90_fu_1394_p1;
wire   [29:0] tmp_88_fu_1377_p3;
wire   [29:0] tmp_89_fu_1384_p1;
wire   [29:0] tmp_49_fu_1398_p3;
wire   [29:0] tmp_91_fu_1405_p2;
wire   [29:0] tmp_51_fu_1411_p3;
wire   [0:0] not_tmp_6_11_fu_1388_p2;
wire   [15:0] tmp_4_12_fu_1430_p15;
wire   [15:0] b_12_fu_1455_p2;
wire   [31:0] c_3_12_fu_1423_p3;
wire   [31:0] b_13_cast_fu_1461_p1;
wire   [27:0] tmp_92_fu_1419_p1;
wire   [0:0] tmp_6_13_fu_1465_p2;
wire   [27:0] tmp_96_fu_1491_p1;
wire   [29:0] tmp_93_fu_1471_p3;
wire   [29:0] tmp_94_fu_1478_p1;
wire   [29:0] tmp_53_fu_1495_p3;
wire   [29:0] tmp_97_fu_1502_p2;
wire   [29:0] tmp_55_fu_1508_p3;
wire   [1:0] tmp_95_fu_1488_p1;
wire   [0:0] not_tmp_6_12_fu_1482_p2;
wire   [16:0] tmp_4_13_fu_1524_p16;
wire   [16:0] b_13_fu_1551_p2;
wire   [31:0] c_3_13_fu_1516_p3;
wire   [31:0] b_14_cast_fu_1557_p1;
wire   [0:0] ult_fu_1561_p2;
wire   [0:0] rev4_fu_1567_p2;
reg   [2:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'b1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        a_1_1_reg_1714 <= a_1_1_fu_378_p3;
        not_tmp_6_2_reg_1726 <= not_tmp_6_2_fu_448_p2;
        not_tmp_6_3_reg_1738 <= not_tmp_6_3_fu_527_p2;
        not_tmp_6_4_reg_1750 <= not_tmp_6_4_fu_608_p2;
        not_tmp_6_5_reg_1762 <= not_tmp_6_5_fu_691_p2;
        not_tmp_6_6_reg_1774 <= not_tmp_6_6_fu_776_p2;
        not_tmp_6_7_reg_1786 <= not_tmp_6_7_fu_863_p2;
        tmp_65_reg_1804 <= tmp_65_fu_952_p1;
        tmp_66_reg_1809 <= tmp_66_fu_956_p2;
        tmp_6_8_reg_1798 <= tmp_6_8_fu_935_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        c_1_reg_1613 <= c_1_fu_180_p3;
        tmp_16_cast_reg_1623 <= {{value_r[ap_const_lv32_1B : ap_const_lv32_1A]}};
        tmp_17_cast_reg_1630 <= {{value_r[ap_const_lv32_19 : ap_const_lv32_18]}};
        tmp_18_cast_reg_1637 <= {{value_r[ap_const_lv32_17 : ap_const_lv32_16]}};
        tmp_19_cast_reg_1644 <= {{value_r[ap_const_lv32_15 : ap_const_lv32_14]}};
        tmp_20_cast_reg_1651 <= {{value_r[ap_const_lv32_13 : ap_const_lv32_12]}};
        tmp_22_cast_reg_1658 <= {{value_r[ap_const_lv32_11 : ap_const_lv32_10]}};
        tmp_23_cast_reg_1665 <= {{value_r[ap_const_lv32_F : ap_const_lv32_E]}};
        tmp_24_cast_reg_1672 <= {{value_r[ap_const_lv32_D : ap_const_lv32_C]}};
        tmp_25_cast_reg_1679 <= {{value_r[ap_const_lv32_B : ap_const_lv32_A]}};
        tmp_26_cast_reg_1686 <= {{value_r[ap_const_lv32_9 : ap_const_lv32_8]}};
        tmp_27_cast_reg_1693 <= {{value_r[ap_const_lv32_7 : ap_const_lv32_6]}};
        tmp_28_cast_reg_1700 <= {{value_r[ap_const_lv32_5 : ap_const_lv32_4]}};
        tmp_29_cast_reg_1707 <= {{value_r[ap_const_lv32_3 : ap_const_lv32_2]}};
        tmp_4_cast_reg_1618 <= {{value_r[ap_const_lv32_1D : ap_const_lv32_1C]}};
        tmp_6_reg_1605 <= tmp_6_fu_168_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_20) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_71) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_490) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_1_1_fu_378_p3 = ((tmp_6_1_fu_359_p2[0:0] === 1'b1) ? a_2_1_fu_338_p3 : a_3_1_fu_371_p3);

assign a_2_1_fu_338_p3 = ((tmp_6_reg_1605[0:0] === 1'b1) ? ap_const_lv2_0 : ap_const_lv2_2);

assign a_3_1_fu_371_p3 = ((tmp_6_reg_1605[0:0] === 1'b1) ? ap_const_lv2_1 : ap_const_lv2_3);

assign ap_return = {{{{{{{{{{{{{{{a_1_1_reg_1714}, {not_tmp_6_2_reg_1726}}, {not_tmp_6_3_reg_1738}}, {not_tmp_6_4_reg_1750}}, {not_tmp_6_5_reg_1762}}, {not_tmp_6_6_reg_1774}}, {not_tmp_6_7_reg_1786}}, {not_tmp_6_8_fu_962_p2}}, {not_tmp_6_9_fu_1032_p2}}, {not_tmp_6_s_fu_1118_p2}}, {not_tmp_6_1_fu_1206_p2}}, {not_tmp_6_10_fu_1296_p2}}, {not_tmp_6_11_fu_1388_p2}}, {not_tmp_6_12_fu_1482_p2}}, {rev4_fu_1567_p2}};

always @ (*) begin
    ap_sig_20 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_490 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_71 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

assign b_10_cast_fu_1185_p1 = b_1_fu_1179_p2;

assign b_10_fu_1269_p2 = (tmp_4_10_fu_1248_p13 | ap_const_lv14_1);

assign b_11_cast_fu_1275_p1 = b_10_fu_1269_p2;

assign b_11_fu_1361_p2 = (tmp_4_11_fu_1338_p14 | ap_const_lv15_1);

assign b_12_cast_fu_1367_p1 = b_11_fu_1361_p2;

assign b_12_fu_1455_p2 = (tmp_4_12_fu_1430_p15 | ap_const_lv16_1);

assign b_13_cast_fu_1461_p1 = b_12_fu_1455_p2;

assign b_13_fu_1551_p2 = (tmp_4_13_fu_1524_p16 | ap_const_lv17_1);

assign b_14_cast_fu_1557_p1 = b_13_fu_1551_p2;

assign b_1_cast_cast1_fu_345_p3 = ((tmp_6_reg_1605[0:0] === 1'b1) ? ap_const_lv6_1 : ap_const_lv6_5);

assign b_1_cast_cast_fu_352_p3 = ((tmp_6_reg_1605[0:0] === 1'b1) ? ap_const_lv5_1 : ap_const_lv5_5);

assign b_1_fu_1179_p2 = (tmp_4_1_fu_1160_p12 | ap_const_lv13_1);

assign b_2_cast_fu_427_p1 = b_2_fu_421_p2;

assign b_2_fu_421_p2 = (tmp_4_2_fu_413_p3 | ap_const_lv4_1);

assign b_3_cast_fu_506_p1 = b_3_fu_500_p2;

assign b_3_fu_500_p2 = (tmp_4_3_fu_490_p4 | ap_const_lv5_1);

assign b_4_cast_fu_587_p1 = b_4_fu_581_p2;

assign b_4_fu_581_p2 = (tmp_4_4_fu_569_p5 | ap_const_lv6_1);

assign b_5_cast_fu_670_p1 = b_5_fu_664_p2;

assign b_5_fu_664_p2 = (tmp_4_5_fu_650_p6 | ap_const_lv7_1);

assign b_6_cast_fu_755_p1 = b_6_fu_749_p2;

assign b_6_fu_749_p2 = (tmp_4_6_fu_733_p7 | ap_const_lv8_1);

assign b_7_cast_fu_842_p1 = b_7_fu_836_p2;

assign b_7_fu_836_p2 = (tmp_4_7_fu_818_p8 | ap_const_lv9_1);

assign b_8_cast_fu_931_p1 = b_8_fu_925_p2;

assign b_8_fu_925_p2 = (tmp_4_8_fu_905_p9 | ap_const_lv10_1);

assign b_9_cast_fu_1011_p1 = b_9_fu_1005_p2;

assign b_9_fu_1005_p2 = (tmp_4_9_fu_990_p10 | ap_const_lv11_1);

assign b_cast_fu_1097_p1 = b_s_fu_1091_p2;

assign b_s_fu_1091_p2 = (tmp_4_s_fu_1074_p11 | ap_const_lv12_1);

assign c_1_fu_180_p3 = ((tmp_6_fu_168_p2[0:0] === 1'b1) ? ap_const_lv3_0 : c_4_fu_174_p2);

assign c_3_10_fu_1241_p3 = {{tmp_43_fu_1229_p3}, {tmp_27_cast_reg_1693}};

assign c_3_11_fu_1331_p3 = {{tmp_47_fu_1319_p3}, {tmp_28_cast_reg_1700}};

assign c_3_12_fu_1423_p3 = {{tmp_51_fu_1411_p3}, {tmp_29_cast_reg_1707}};

assign c_3_13_fu_1516_p3 = {{tmp_55_fu_1508_p3}, {tmp_95_fu_1488_p1}};

assign c_3_1_cast2_fu_334_p1 = $signed(tmp_fu_328_p3);

assign c_3_1_fu_1153_p3 = {{tmp_39_fu_1141_p3}, {tmp_26_cast_reg_1686}};

assign c_3_2_fu_406_p3 = {{tmp_4_fu_394_p3}, {tmp_16_cast_reg_1623}};

assign c_3_3_fu_483_p3 = {{tmp_9_fu_471_p3}, {tmp_17_cast_reg_1630}};

assign c_3_4_fu_562_p3 = {{tmp_11_fu_550_p3}, {tmp_18_cast_reg_1637}};

assign c_3_5_fu_643_p3 = {{tmp_15_fu_631_p3}, {tmp_19_cast_reg_1644}};

assign c_3_6_fu_726_p3 = {{tmp_19_fu_714_p3}, {tmp_20_cast_reg_1651}};

assign c_3_7_fu_811_p3 = {{tmp_23_fu_799_p3}, {tmp_22_cast_reg_1658}};

assign c_3_8_fu_898_p3 = {{tmp_27_fu_886_p3}, {tmp_23_cast_reg_1665}};

assign c_3_9_fu_983_p3 = {{tmp_31_fu_973_p3}, {tmp_24_cast_reg_1672}};

assign c_3_s_fu_1067_p3 = {{tmp_35_fu_1055_p3}, {tmp_25_cast_reg_1679}};

assign c_4_1_fu_365_p2 = ($signed(c_3_1_cast2_fu_334_p1) - $signed(b_1_cast_cast1_fu_345_p3));

assign c_4_fu_174_p2 = ($signed(tmp1_cast_fu_164_p1) + $signed(ap_const_lv3_7));

assign not_tmp_6_10_fu_1296_p2 = (tmp_6_11_fu_1279_p2 ^ 1'b1);

assign not_tmp_6_11_fu_1388_p2 = (tmp_6_12_fu_1371_p2 ^ 1'b1);

assign not_tmp_6_12_fu_1482_p2 = (tmp_6_13_fu_1465_p2 ^ 1'b1);

assign not_tmp_6_1_fu_1206_p2 = (tmp_6_10_fu_1189_p2 ^ 1'b1);

assign not_tmp_6_2_fu_448_p2 = (tmp_6_2_fu_431_p2 ^ 1'b1);

assign not_tmp_6_3_fu_527_p2 = (tmp_6_3_fu_510_p2 ^ 1'b1);

assign not_tmp_6_4_fu_608_p2 = (tmp_6_4_fu_591_p2 ^ 1'b1);

assign not_tmp_6_5_fu_691_p2 = (tmp_6_5_fu_674_p2 ^ 1'b1);

assign not_tmp_6_6_fu_776_p2 = (tmp_6_6_fu_759_p2 ^ 1'b1);

assign not_tmp_6_7_fu_863_p2 = (tmp_6_7_fu_846_p2 ^ 1'b1);

assign not_tmp_6_8_fu_962_p2 = (tmp_6_8_reg_1798 ^ 1'b1);

assign not_tmp_6_9_fu_1032_p2 = (tmp_6_9_fu_1015_p2 ^ 1'b1);

assign not_tmp_6_s_fu_1118_p2 = (tmp_6_s_fu_1101_p2 ^ 1'b1);

assign rev4_fu_1567_p2 = (ult_fu_1561_p2 ^ 1'b1);

assign tmp1_cast_fu_164_p1 = tmp_1_fu_154_p4;

assign tmp_10_fu_444_p1 = b_2_fu_421_p2;

assign tmp_11_fu_550_p3 = ((tmp_6_3_fu_510_p2[0:0] === 1'b1) ? tmp_s_fu_537_p3 : tmp_24_fu_544_p2);

assign tmp_12_fu_454_p1 = tmp_4_fu_394_p3[27:0];

assign tmp_13_fu_618_p3 = {{tmp_32_fu_614_p1}, {tmp_18_cast_reg_1637}};

assign tmp_14_fu_465_p2 = (tmp_8_fu_437_p3 - tmp_10_fu_444_p1);

assign tmp_15_fu_631_p3 = ((tmp_6_4_fu_591_p2[0:0] === 1'b1) ? tmp_13_fu_618_p3 : tmp_34_fu_625_p2);

assign tmp_16_fu_479_p1 = tmp_9_fu_471_p3[27:0];

assign tmp_17_fu_701_p3 = {{tmp_42_fu_697_p1}, {tmp_19_cast_reg_1644}};

assign tmp_18_fu_516_p3 = {{tmp_16_fu_479_p1}, {tmp_17_cast_reg_1630}};

assign tmp_19_fu_714_p3 = ((tmp_6_5_fu_674_p2[0:0] === 1'b1) ? tmp_17_fu_701_p3 : tmp_44_fu_708_p2);

assign tmp_1_fu_154_p4 = {{value_r[ap_const_lv32_1F : ap_const_lv32_1E]}};

assign tmp_20_fu_523_p1 = b_3_fu_500_p2;

assign tmp_21_fu_786_p3 = {{tmp_52_fu_782_p1}, {tmp_20_cast_reg_1651}};

assign tmp_22_fu_533_p1 = tmp_9_fu_471_p3[27:0];

assign tmp_23_fu_799_p3 = ((tmp_6_6_fu_759_p2[0:0] === 1'b1) ? tmp_21_fu_786_p3 : tmp_54_fu_793_p2);

assign tmp_24_fu_544_p2 = (tmp_18_fu_516_p3 - tmp_20_fu_523_p1);

assign tmp_25_fu_873_p3 = {{tmp_60_fu_869_p1}, {tmp_22_cast_reg_1658}};

assign tmp_26_fu_558_p1 = tmp_11_fu_550_p3[27:0];

assign tmp_27_fu_886_p3 = ((tmp_6_7_fu_846_p2[0:0] === 1'b1) ? tmp_25_fu_873_p3 : tmp_61_fu_880_p2);

assign tmp_28_fu_597_p3 = {{tmp_26_fu_558_p1}, {tmp_18_cast_reg_1637}};

assign tmp_29_fu_967_p3 = {{tmp_65_reg_1804}, {tmp_23_cast_reg_1665}};

assign tmp_2_fu_386_p1 = $signed(tmp_fu_328_p3);

assign tmp_30_fu_604_p1 = b_4_fu_581_p2;

assign tmp_31_fu_973_p3 = ((tmp_6_8_reg_1798[0:0] === 1'b1) ? tmp_29_fu_967_p3 : tmp_66_reg_1809);

assign tmp_32_fu_614_p1 = tmp_11_fu_550_p3[27:0];

assign tmp_33_fu_1042_p3 = {{tmp_70_fu_1038_p1}, {tmp_24_cast_reg_1672}};

assign tmp_34_fu_625_p2 = (tmp_28_fu_597_p3 - tmp_30_fu_604_p1);

assign tmp_35_fu_1055_p3 = ((tmp_6_9_fu_1015_p2[0:0] === 1'b1) ? tmp_33_fu_1042_p3 : tmp_71_fu_1049_p2);

assign tmp_36_fu_639_p1 = tmp_15_fu_631_p3[27:0];

assign tmp_37_fu_1128_p3 = {{tmp_75_fu_1124_p1}, {tmp_25_cast_reg_1679}};

assign tmp_38_fu_680_p3 = {{tmp_36_fu_639_p1}, {tmp_19_cast_reg_1644}};

assign tmp_39_fu_1141_p3 = ((tmp_6_s_fu_1101_p2[0:0] === 1'b1) ? tmp_37_fu_1128_p3 : tmp_76_fu_1135_p2);

assign tmp_3_fu_390_p1 = $signed(c_4_1_fu_365_p2);

assign tmp_40_fu_687_p1 = b_5_fu_664_p2;

assign tmp_41_fu_1216_p3 = {{tmp_80_fu_1212_p1}, {tmp_26_cast_reg_1686}};

assign tmp_42_fu_697_p1 = tmp_15_fu_631_p3[27:0];

assign tmp_43_fu_1229_p3 = ((tmp_6_10_fu_1189_p2[0:0] === 1'b1) ? tmp_41_fu_1216_p3 : tmp_81_fu_1223_p2);

assign tmp_44_fu_708_p2 = (tmp_38_fu_680_p3 - tmp_40_fu_687_p1);

assign tmp_45_fu_1306_p3 = {{tmp_85_fu_1302_p1}, {tmp_27_cast_reg_1693}};

assign tmp_46_fu_722_p1 = tmp_19_fu_714_p3[27:0];

assign tmp_47_fu_1319_p3 = ((tmp_6_11_fu_1279_p2[0:0] === 1'b1) ? tmp_45_fu_1306_p3 : tmp_86_fu_1313_p2);

assign tmp_48_fu_765_p3 = {{tmp_46_fu_722_p1}, {tmp_20_cast_reg_1651}};

assign tmp_49_fu_1398_p3 = {{tmp_90_fu_1394_p1}, {tmp_28_cast_reg_1700}};

assign tmp_4_10_fu_1248_p13 = {{{{{{{{{{{{a_1_1_reg_1714}, {not_tmp_6_2_reg_1726}}, {not_tmp_6_3_reg_1738}}, {not_tmp_6_4_reg_1750}}, {not_tmp_6_5_reg_1762}}, {not_tmp_6_6_reg_1774}}, {not_tmp_6_7_reg_1786}}, {not_tmp_6_8_fu_962_p2}}, {not_tmp_6_9_fu_1032_p2}}, {not_tmp_6_s_fu_1118_p2}}, {not_tmp_6_1_fu_1206_p2}}, {ap_const_lv2_0}};

assign tmp_4_11_fu_1338_p14 = {{{{{{{{{{{{{a_1_1_reg_1714}, {not_tmp_6_2_reg_1726}}, {not_tmp_6_3_reg_1738}}, {not_tmp_6_4_reg_1750}}, {not_tmp_6_5_reg_1762}}, {not_tmp_6_6_reg_1774}}, {not_tmp_6_7_reg_1786}}, {not_tmp_6_8_fu_962_p2}}, {not_tmp_6_9_fu_1032_p2}}, {not_tmp_6_s_fu_1118_p2}}, {not_tmp_6_1_fu_1206_p2}}, {not_tmp_6_10_fu_1296_p2}}, {ap_const_lv2_0}};

assign tmp_4_12_fu_1430_p15 = {{{{{{{{{{{{{{a_1_1_reg_1714}, {not_tmp_6_2_reg_1726}}, {not_tmp_6_3_reg_1738}}, {not_tmp_6_4_reg_1750}}, {not_tmp_6_5_reg_1762}}, {not_tmp_6_6_reg_1774}}, {not_tmp_6_7_reg_1786}}, {not_tmp_6_8_fu_962_p2}}, {not_tmp_6_9_fu_1032_p2}}, {not_tmp_6_s_fu_1118_p2}}, {not_tmp_6_1_fu_1206_p2}}, {not_tmp_6_10_fu_1296_p2}}, {not_tmp_6_11_fu_1388_p2}}, {ap_const_lv2_0}};

assign tmp_4_13_fu_1524_p16 = {{{{{{{{{{{{{{{a_1_1_reg_1714}, {not_tmp_6_2_reg_1726}}, {not_tmp_6_3_reg_1738}}, {not_tmp_6_4_reg_1750}}, {not_tmp_6_5_reg_1762}}, {not_tmp_6_6_reg_1774}}, {not_tmp_6_7_reg_1786}}, {not_tmp_6_8_fu_962_p2}}, {not_tmp_6_9_fu_1032_p2}}, {not_tmp_6_s_fu_1118_p2}}, {not_tmp_6_1_fu_1206_p2}}, {not_tmp_6_10_fu_1296_p2}}, {not_tmp_6_11_fu_1388_p2}}, {not_tmp_6_12_fu_1482_p2}}, {ap_const_lv2_0}};

assign tmp_4_1_fu_1160_p12 = {{{{{{{{{{{a_1_1_reg_1714}, {not_tmp_6_2_reg_1726}}, {not_tmp_6_3_reg_1738}}, {not_tmp_6_4_reg_1750}}, {not_tmp_6_5_reg_1762}}, {not_tmp_6_6_reg_1774}}, {not_tmp_6_7_reg_1786}}, {not_tmp_6_8_fu_962_p2}}, {not_tmp_6_9_fu_1032_p2}}, {not_tmp_6_s_fu_1118_p2}}, {ap_const_lv2_0}};

assign tmp_4_2_fu_413_p3 = {{a_1_1_fu_378_p3}, {ap_const_lv2_0}};

assign tmp_4_3_fu_490_p4 = {{{a_1_1_fu_378_p3}, {not_tmp_6_2_fu_448_p2}}, {ap_const_lv2_0}};

assign tmp_4_4_fu_569_p5 = {{{{a_1_1_fu_378_p3}, {not_tmp_6_2_fu_448_p2}}, {not_tmp_6_3_fu_527_p2}}, {ap_const_lv2_0}};

assign tmp_4_5_fu_650_p6 = {{{{{a_1_1_fu_378_p3}, {not_tmp_6_2_fu_448_p2}}, {not_tmp_6_3_fu_527_p2}}, {not_tmp_6_4_fu_608_p2}}, {ap_const_lv2_0}};

assign tmp_4_6_fu_733_p7 = {{{{{{a_1_1_fu_378_p3}, {not_tmp_6_2_fu_448_p2}}, {not_tmp_6_3_fu_527_p2}}, {not_tmp_6_4_fu_608_p2}}, {not_tmp_6_5_fu_691_p2}}, {ap_const_lv2_0}};

assign tmp_4_7_fu_818_p8 = {{{{{{{a_1_1_fu_378_p3}, {not_tmp_6_2_fu_448_p2}}, {not_tmp_6_3_fu_527_p2}}, {not_tmp_6_4_fu_608_p2}}, {not_tmp_6_5_fu_691_p2}}, {not_tmp_6_6_fu_776_p2}}, {ap_const_lv2_0}};

assign tmp_4_8_fu_905_p9 = {{{{{{{{a_1_1_fu_378_p3}, {not_tmp_6_2_fu_448_p2}}, {not_tmp_6_3_fu_527_p2}}, {not_tmp_6_4_fu_608_p2}}, {not_tmp_6_5_fu_691_p2}}, {not_tmp_6_6_fu_776_p2}}, {not_tmp_6_7_fu_863_p2}}, {ap_const_lv2_0}};

assign tmp_4_9_fu_990_p10 = {{{{{{{{{a_1_1_reg_1714}, {not_tmp_6_2_reg_1726}}, {not_tmp_6_3_reg_1738}}, {not_tmp_6_4_reg_1750}}, {not_tmp_6_5_reg_1762}}, {not_tmp_6_6_reg_1774}}, {not_tmp_6_7_reg_1786}}, {not_tmp_6_8_fu_962_p2}}, {ap_const_lv2_0}};

assign tmp_4_fu_394_p3 = ((tmp_6_1_fu_359_p2[0:0] === 1'b1) ? tmp_2_fu_386_p1 : tmp_3_fu_390_p1);

assign tmp_4_s_fu_1074_p11 = {{{{{{{{{{a_1_1_reg_1714}, {not_tmp_6_2_reg_1726}}, {not_tmp_6_3_reg_1738}}, {not_tmp_6_4_reg_1750}}, {not_tmp_6_5_reg_1762}}, {not_tmp_6_6_reg_1774}}, {not_tmp_6_7_reg_1786}}, {not_tmp_6_8_fu_962_p2}}, {not_tmp_6_9_fu_1032_p2}}, {ap_const_lv2_0}};

assign tmp_50_fu_772_p1 = b_6_fu_749_p2;

assign tmp_51_fu_1411_p3 = ((tmp_6_12_fu_1371_p2[0:0] === 1'b1) ? tmp_49_fu_1398_p3 : tmp_91_fu_1405_p2);

assign tmp_52_fu_782_p1 = tmp_19_fu_714_p3[27:0];

assign tmp_53_fu_1495_p3 = {{tmp_96_fu_1491_p1}, {tmp_29_cast_reg_1707}};

assign tmp_54_fu_793_p2 = (tmp_48_fu_765_p3 - tmp_50_fu_772_p1);

assign tmp_55_fu_1508_p3 = ((tmp_6_13_fu_1465_p2[0:0] === 1'b1) ? tmp_53_fu_1495_p3 : tmp_97_fu_1502_p2);

assign tmp_56_fu_807_p1 = tmp_23_fu_799_p3[27:0];

assign tmp_58_fu_852_p3 = {{tmp_56_fu_807_p1}, {tmp_22_cast_reg_1658}};

assign tmp_59_fu_859_p1 = b_7_fu_836_p2;

assign tmp_5_fu_402_p1 = tmp_4_fu_394_p3[27:0];

assign tmp_60_fu_869_p1 = tmp_23_fu_799_p3[27:0];

assign tmp_61_fu_880_p2 = (tmp_58_fu_852_p3 - tmp_59_fu_859_p1);

assign tmp_62_fu_894_p1 = tmp_27_fu_886_p3[27:0];

assign tmp_63_fu_941_p3 = {{tmp_62_fu_894_p1}, {tmp_23_cast_reg_1665}};

assign tmp_64_fu_948_p1 = b_8_fu_925_p2;

assign tmp_65_fu_952_p1 = tmp_27_fu_886_p3[27:0];

assign tmp_66_fu_956_p2 = (tmp_63_fu_941_p3 - tmp_64_fu_948_p1);

assign tmp_67_fu_979_p1 = tmp_31_fu_973_p3[27:0];

assign tmp_68_fu_1021_p3 = {{tmp_67_fu_979_p1}, {tmp_24_cast_reg_1672}};

assign tmp_69_fu_1028_p1 = b_9_fu_1005_p2;

assign tmp_6_10_fu_1189_p2 = ((c_3_1_fu_1153_p3 < b_10_cast_fu_1185_p1) ? 1'b1 : 1'b0);

assign tmp_6_11_fu_1279_p2 = ((c_3_10_fu_1241_p3 < b_11_cast_fu_1275_p1) ? 1'b1 : 1'b0);

assign tmp_6_12_fu_1371_p2 = ((c_3_11_fu_1331_p3 < b_12_cast_fu_1367_p1) ? 1'b1 : 1'b0);

assign tmp_6_13_fu_1465_p2 = ((c_3_12_fu_1423_p3 < b_13_cast_fu_1461_p1) ? 1'b1 : 1'b0);

assign tmp_6_1_fu_359_p2 = ((tmp_fu_328_p3 < b_1_cast_cast_fu_352_p3) ? 1'b1 : 1'b0);

assign tmp_6_2_fu_431_p2 = ((c_3_2_fu_406_p3 < b_2_cast_fu_427_p1) ? 1'b1 : 1'b0);

assign tmp_6_3_fu_510_p2 = ((c_3_3_fu_483_p3 < b_3_cast_fu_506_p1) ? 1'b1 : 1'b0);

assign tmp_6_4_fu_591_p2 = ((c_3_4_fu_562_p3 < b_4_cast_fu_587_p1) ? 1'b1 : 1'b0);

assign tmp_6_5_fu_674_p2 = ((c_3_5_fu_643_p3 < b_5_cast_fu_670_p1) ? 1'b1 : 1'b0);

assign tmp_6_6_fu_759_p2 = ((c_3_6_fu_726_p3 < b_6_cast_fu_755_p1) ? 1'b1 : 1'b0);

assign tmp_6_7_fu_846_p2 = ((c_3_7_fu_811_p3 < b_7_cast_fu_842_p1) ? 1'b1 : 1'b0);

assign tmp_6_8_fu_935_p2 = ((c_3_8_fu_898_p3 < b_8_cast_fu_931_p1) ? 1'b1 : 1'b0);

assign tmp_6_9_fu_1015_p2 = ((c_3_9_fu_983_p3 < b_9_cast_fu_1011_p1) ? 1'b1 : 1'b0);

assign tmp_6_fu_168_p2 = ((tmp_1_fu_154_p4 == ap_const_lv2_0) ? 1'b1 : 1'b0);

assign tmp_6_s_fu_1101_p2 = ((c_3_s_fu_1067_p3 < b_cast_fu_1097_p1) ? 1'b1 : 1'b0);

assign tmp_70_fu_1038_p1 = tmp_31_fu_973_p3[27:0];

assign tmp_71_fu_1049_p2 = (tmp_68_fu_1021_p3 - tmp_69_fu_1028_p1);

assign tmp_72_fu_1063_p1 = tmp_35_fu_1055_p3[27:0];

assign tmp_73_fu_1107_p3 = {{tmp_72_fu_1063_p1}, {tmp_25_cast_reg_1679}};

assign tmp_74_fu_1114_p1 = b_s_fu_1091_p2;

assign tmp_75_fu_1124_p1 = tmp_35_fu_1055_p3[27:0];

assign tmp_76_fu_1135_p2 = (tmp_73_fu_1107_p3 - tmp_74_fu_1114_p1);

assign tmp_77_fu_1149_p1 = tmp_39_fu_1141_p3[27:0];

assign tmp_78_fu_1195_p3 = {{tmp_77_fu_1149_p1}, {tmp_26_cast_reg_1686}};

assign tmp_79_fu_1202_p1 = b_1_fu_1179_p2;

assign tmp_7_fu_458_p3 = {{tmp_12_fu_454_p1}, {tmp_16_cast_reg_1623}};

assign tmp_80_fu_1212_p1 = tmp_39_fu_1141_p3[27:0];

assign tmp_81_fu_1223_p2 = (tmp_78_fu_1195_p3 - tmp_79_fu_1202_p1);

assign tmp_82_fu_1237_p1 = tmp_43_fu_1229_p3[27:0];

assign tmp_83_fu_1285_p3 = {{tmp_82_fu_1237_p1}, {tmp_27_cast_reg_1693}};

assign tmp_84_fu_1292_p1 = b_10_fu_1269_p2;

assign tmp_85_fu_1302_p1 = tmp_43_fu_1229_p3[27:0];

assign tmp_86_fu_1313_p2 = (tmp_83_fu_1285_p3 - tmp_84_fu_1292_p1);

assign tmp_87_fu_1327_p1 = tmp_47_fu_1319_p3[27:0];

assign tmp_88_fu_1377_p3 = {{tmp_87_fu_1327_p1}, {tmp_28_cast_reg_1700}};

assign tmp_89_fu_1384_p1 = b_11_fu_1361_p2;

assign tmp_8_fu_437_p3 = {{tmp_5_fu_402_p1}, {tmp_16_cast_reg_1623}};

assign tmp_90_fu_1394_p1 = tmp_47_fu_1319_p3[27:0];

assign tmp_91_fu_1405_p2 = (tmp_88_fu_1377_p3 - tmp_89_fu_1384_p1);

assign tmp_92_fu_1419_p1 = tmp_51_fu_1411_p3[27:0];

assign tmp_93_fu_1471_p3 = {{tmp_92_fu_1419_p1}, {tmp_29_cast_reg_1707}};

assign tmp_94_fu_1478_p1 = b_12_fu_1455_p2;

assign tmp_95_fu_1488_p1 = value_r[1:0];

assign tmp_96_fu_1491_p1 = tmp_51_fu_1411_p3[27:0];

assign tmp_97_fu_1502_p2 = (tmp_93_fu_1471_p3 - tmp_94_fu_1478_p1);

assign tmp_9_fu_471_p3 = ((tmp_6_2_fu_431_p2[0:0] === 1'b1) ? tmp_7_fu_458_p3 : tmp_14_fu_465_p2);

assign tmp_fu_328_p3 = {{c_1_reg_1613}, {tmp_4_cast_reg_1618}};

assign tmp_s_fu_537_p3 = {{tmp_22_fu_533_p1}, {tmp_17_cast_reg_1630}};

assign ult_fu_1561_p2 = ((c_3_13_fu_1516_p3 < b_14_cast_fu_1557_p1) ? 1'b1 : 1'b0);

endmodule //detect_face_int_sqrt

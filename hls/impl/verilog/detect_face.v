// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="detect_face,hls_ip_2016_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k325tffg900-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.430000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=134,HLS_SYN_DSP=52,HLS_SYN_FF=4939,HLS_SYN_LUT=9201}" *)

module detect_face (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        pixel,
        result_x1_0,
        result_x1_0_ap_vld,
        result_y1_0,
        result_y1_0_ap_vld,
        result_x2_0,
        result_x2_0_ap_vld,
        result_y2_0,
        result_y2_0_ap_vld,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 24'b1;
parameter    ap_ST_st2_fsm_1 = 24'b10;
parameter    ap_ST_st3_fsm_2 = 24'b100;
parameter    ap_ST_st4_fsm_3 = 24'b1000;
parameter    ap_ST_st5_fsm_4 = 24'b10000;
parameter    ap_ST_st6_fsm_5 = 24'b100000;
parameter    ap_ST_st7_fsm_6 = 24'b1000000;
parameter    ap_ST_st8_fsm_7 = 24'b10000000;
parameter    ap_ST_st9_fsm_8 = 24'b100000000;
parameter    ap_ST_st10_fsm_9 = 24'b1000000000;
parameter    ap_ST_st11_fsm_10 = 24'b10000000000;
parameter    ap_ST_st12_fsm_11 = 24'b100000000000;
parameter    ap_ST_st13_fsm_12 = 24'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 24'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 24'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 24'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 24'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 24'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 24'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 24'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 24'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 24'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 24'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 24'b100000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_A0 = 32'b10100000;
parameter    ap_const_lv32_78 = 32'b1111000;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv32_41C00000 = 32'b1000001110000000000000000000000;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_42F00000 = 32'b1000010111100000000000000000000;
parameter    ap_const_lv32_43200000 = 32'b1000011001000000000000000000000;
parameter    ap_const_lv64_3FF3333333333333 = 64'b11111111110011001100110011001100110011001100110011001100110011;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_9F = 32'b10011111;
parameter    ap_const_lv7_77 = 7'b1110111;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv9_181 = 9'b110000001;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] pixel;
output  [7:0] result_x1_0;
output   result_x1_0_ap_vld;
output  [7:0] result_y1_0;
output   result_y1_0_ap_vld;
output  [7:0] result_x2_0;
output   result_x2_0_ap_vld;
output  [7:0] result_y2_0;
output   result_y2_0_ap_vld;
output  [7:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg result_x1_0_ap_vld;
reg result_y1_0_ap_vld;
reg result_x2_0_ap_vld;
reg result_y2_0_ap_vld;

(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_39;
reg   [31:0] read_col;
reg   [6:0] read_row;
reg   [14:0] input_image_address0;
reg    input_image_ce0;
reg    input_image_we0;
wire   [7:0] input_image_q0;
wire   [31:0] row_2_fu_647_p2;
reg   [31:0] row_2_reg_1186;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_76;
wire   [15:0] tmp_72_fu_677_p2;
reg   [15:0] tmp_72_reg_1191;
wire   [0:0] exitcond1_fu_641_p2;
wire   [0:0] tmp_17_fu_683_p2;
reg   [0:0] tmp_17_reg_1196;
wire   [15:0] tmp_73_fu_719_p2;
reg   [15:0] tmp_73_reg_1200;
wire   [63:0] tmp_15_fu_503_p1;
reg   [63:0] tmp_15_reg_1210;
wire   [31:0] col_2_fu_735_p2;
reg   [31:0] col_2_reg_1218;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_101;
wire   [0:0] exitcond_fu_729_p2;
reg   [14:0] integral_image_addr_reg_1228;
reg   [14:0] integral_image_addr_1_reg_1233;
wire   [31:0] accum_1_fu_770_p2;
reg   [31:0] accum_1_reg_1238;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_119;
wire   [31:0] tmp_21_fu_776_p2;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_128;
reg   [7:0] best_coords_0_reg_1250;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_137;
wire    grp_detect_face_cascade_classifier_fu_410_ap_done;
reg   [7:0] best_coords_1_reg_1255;
reg   [7:0] best_coords_2_reg_1260;
reg   [7:0] best_coords_3_reg_1265;
reg   [7:0] best_coords_4_reg_1270;
wire   [63:0] grp_fu_507_p2;
reg   [63:0] tmp_16_reg_1275;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_158;
wire   [31:0] factor_1_fu_500_p1;
reg   [31:0] factor_1_reg_1280;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_167;
reg   [7:0] loc_V_reg_1288;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_176;
wire   [22:0] loc_V_1_fu_824_p1;
reg   [22:0] loc_V_1_reg_1294;
wire   [31:0] result_V_fu_919_p3;
reg   [31:0] result_V_reg_1299;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_187;
reg   [7:0] loc_V_2_reg_1304;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_196;
wire   [22:0] loc_V_3_fu_941_p1;
reg   [22:0] loc_V_3_reg_1310;
reg   [7:0] loc_V_4_reg_1315;
wire   [22:0] loc_V_5_fu_959_p1;
reg   [22:0] loc_V_5_reg_1321;
wire   [31:0] result_V_1_fu_1054_p3;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_211;
wire   [31:0] result_V_2_fu_1153_p3;
reg   [14:0] curr_image_address0;
reg    curr_image_ce0;
wire   [7:0] curr_image_q0;
reg   [14:0] integral_image_address0;
reg    integral_image_ce0;
reg    integral_image_we0;
wire   [31:0] integral_image_q0;
reg    integral_image_ce1;
wire   [31:0] integral_image_q1;
wire    grp_detect_face_cascade_classifier_fu_410_ap_start;
wire    grp_detect_face_cascade_classifier_fu_410_ap_idle;
wire    grp_detect_face_cascade_classifier_fu_410_ap_ready;
wire   [14:0] grp_detect_face_cascade_classifier_fu_410_integral_image_address0;
wire    grp_detect_face_cascade_classifier_fu_410_integral_image_ce0;
wire   [14:0] grp_detect_face_cascade_classifier_fu_410_integral_image_address1;
wire    grp_detect_face_cascade_classifier_fu_410_integral_image_ce1;
wire   [7:0] grp_detect_face_cascade_classifier_fu_410_ap_return_0;
wire   [7:0] grp_detect_face_cascade_classifier_fu_410_ap_return_1;
wire   [7:0] grp_detect_face_cascade_classifier_fu_410_ap_return_2;
wire   [7:0] grp_detect_face_cascade_classifier_fu_410_ap_return_3;
wire   [7:0] grp_detect_face_cascade_classifier_fu_410_ap_return_4;
wire   [31:0] grp_detect_face_cascade_classifier_fu_410_ap_return_5;
wire    grp_detect_face_downscale_fu_474_ap_start;
wire    grp_detect_face_downscale_fu_474_ap_done;
wire    grp_detect_face_downscale_fu_474_ap_idle;
wire    grp_detect_face_downscale_fu_474_ap_ready;
wire   [14:0] grp_detect_face_downscale_fu_474_src_address0;
wire    grp_detect_face_downscale_fu_474_src_ce0;
wire   [14:0] grp_detect_face_downscale_fu_474_dest_address0;
wire    grp_detect_face_downscale_fu_474_dest_ce0;
wire    grp_detect_face_downscale_fu_474_dest_we0;
wire   [7:0] grp_detect_face_downscale_fu_474_dest_d0;
reg   [7:0] best_coords_4_s_reg_234;
reg   [7:0] best_coords_3_s_reg_247;
reg   [7:0] best_coords_2_s_reg_260;
reg   [7:0] best_coords_1_s_reg_273;
reg   [7:0] best_coords_reg_286;
wire   [0:0] tmp_s_fu_575_p2;
wire   [0:0] tmp_8_fu_593_p2;
reg   [31:0] curr_width_reg_298;
reg   [31:0] curr_height_reg_310;
reg   [31:0] curr_window_size_reg_322;
reg   [31:0] factor_reg_334;
reg   [31:0] row_reg_346;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_320;
reg   [31:0] col_reg_357;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_334;
reg   [31:0] accum_reg_368;
reg   [31:0] storemerge_reg_380;
reg   [1:0] p_0_reg_390;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_355;
wire   [0:0] tmp_13_fu_623_p2;
wire   [0:0] tmp_14_fu_635_p2;
reg    ap_reg_grp_detect_face_cascade_classifier_fu_410_ap_start;
reg    ap_reg_grp_detect_face_downscale_fu_474_ap_start;
wire   [63:0] tmp_69_cast_fu_570_p1;
wire   [63:0] tmp_88_cast_fu_750_p1;
wire   [63:0] tmp_89_cast_fu_761_p1;
wire   [31:0] tmp_9_fu_581_p2;
wire   [6:0] tmp_10_fu_599_p2;
reg   [31:0] best_score_0_1_fu_156;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_563;
wire   [13:0] tmp_62_fu_530_p3;
wire   [11:0] tmp_63_fu_542_p3;
wire   [14:0] p_shl_cast_fu_538_p1;
wire   [14:0] p_shl2_cast_fu_550_p1;
wire   [14:0] tmp_64_fu_554_p2;
wire   [15:0] tmp_fu_522_p1;
wire   [15:0] tmp_68_cast_fu_560_p1;
wire   [15:0] tmp_65_fu_564_p2;
wire   [0:0] tmp_11_fu_611_p2;
wire   [0:0] tmp_12_fu_617_p2;
wire   [8:0] tmp_109_fu_653_p1;
wire   [10:0] tmp_110_fu_665_p1;
wire   [15:0] p_shl5_cast_fu_657_p3;
wire   [15:0] p_shl6_cast_fu_669_p3;
wire   [31:0] tmp_18_fu_689_p2;
wire   [8:0] tmp_111_fu_695_p1;
wire   [10:0] tmp_112_fu_707_p1;
wire   [15:0] p_shl3_cast_fu_699_p3;
wire   [15:0] p_shl4_cast_fu_711_p3;
wire   [15:0] tmp_113_fu_741_p1;
wire   [15:0] tmp_74_fu_745_p2;
wire   [15:0] tmp_75_fu_756_p2;
wire   [31:0] tmp_20_fu_766_p1;
wire   [31:0] grp_fu_485_p2;
wire   [31:0] p_Val2_s_fu_810_p1;
wire   [23:0] p_Result_s_fu_828_p3;
wire   [8:0] tmp_i_i_i_cast_fu_839_p1;
wire   [8:0] sh_assign_fu_842_p2;
wire   [7:0] tmp_1_i_i_fu_856_p2;
wire   [0:0] isNeg_fu_848_p3;
wire  signed [8:0] tmp_1_i_i_cast_fu_861_p1;
wire   [8:0] sh_assign_1_fu_865_p3;
wire  signed [31:0] sh_assign_4_i_cast_fu_873_p1;
wire  signed [23:0] sh_assign_4_i_cast_cast_fu_877_p1;
wire   [77:0] tmp_i_i_fu_835_p1;
wire   [77:0] tmp_2_i_i_fu_881_p1;
wire   [23:0] tmp_3_i_i_fu_885_p2;
wire   [0:0] tmp_102_fu_897_p3;
wire   [77:0] tmp_5_i_i_fu_891_p2;
wire   [31:0] tmp_66_fu_905_p1;
wire   [31:0] tmp_67_fu_909_p4;
wire   [31:0] grp_fu_490_p2;
wire   [31:0] p_Val2_4_fu_927_p1;
wire   [31:0] grp_fu_495_p2;
wire   [31:0] p_Val2_8_fu_945_p1;
wire   [23:0] p_Result_4_fu_963_p3;
wire   [8:0] tmp_i_i_i6_cast_fu_974_p1;
wire   [8:0] sh_assign_2_fu_977_p2;
wire   [7:0] tmp_1_i_i9_fu_991_p2;
wire   [0:0] isNeg_1_fu_983_p3;
wire  signed [8:0] tmp_1_i_i9_cast_fu_996_p1;
wire   [8:0] sh_assign_3_fu_1000_p3;
wire  signed [31:0] sh_assign_4_i10_cast_fu_1008_p1;
wire  signed [23:0] sh_assign_4_i10_cast_cast_fu_1012_p1;
wire   [77:0] tmp_i_i5_fu_970_p1;
wire   [77:0] tmp_2_i_i1_fu_1016_p1;
wire   [23:0] tmp_3_i_i1_fu_1020_p2;
wire   [0:0] tmp_105_fu_1032_p3;
wire   [77:0] tmp_5_i_i1_fu_1026_p2;
wire   [31:0] tmp_68_fu_1040_p1;
wire   [31:0] tmp_69_fu_1044_p4;
wire   [23:0] p_Result_5_fu_1062_p3;
wire   [8:0] tmp_i_i_i22_cast_fu_1073_p1;
wire   [8:0] sh_assign_4_fu_1076_p2;
wire   [7:0] tmp_1_i_i1_fu_1090_p2;
wire   [0:0] isNeg_2_fu_1082_p3;
wire  signed [8:0] tmp_1_i_i25_cast_fu_1095_p1;
wire   [8:0] sh_assign_5_fu_1099_p3;
wire  signed [31:0] sh_assign_4_i26_cast_fu_1107_p1;
wire  signed [23:0] sh_assign_4_i26_cast_cast_fu_1111_p1;
wire   [77:0] tmp_i_i1_fu_1069_p1;
wire   [77:0] tmp_2_i_i2_fu_1115_p1;
wire   [23:0] tmp_3_i_i2_fu_1119_p2;
wire   [0:0] tmp_108_fu_1131_p3;
wire   [77:0] tmp_5_i_i2_fu_1125_p2;
wire   [31:0] tmp_70_fu_1139_p1;
wire   [31:0] tmp_71_fu_1143_p4;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_885;
reg    grp_fu_507_ce;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_907;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_915;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_923;
reg   [23:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 24'b1;
#0 read_col = 32'b00000000000000000000000000000000;
#0 read_row = 7'b0000000;
#0 ap_reg_grp_detect_face_cascade_classifier_fu_410_ap_start = 1'b0;
#0 ap_reg_grp_detect_face_downscale_fu_474_ap_start = 1'b0;
end

detect_face_input_image #(
    .DataWidth( 8 ),
    .AddressRange( 19200 ),
    .AddressWidth( 15 ))
input_image_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_image_address0),
    .ce0(input_image_ce0),
    .we0(input_image_we0),
    .d0(pixel),
    .q0(input_image_q0)
);

detect_face_curr_image #(
    .DataWidth( 8 ),
    .AddressRange( 19200 ),
    .AddressWidth( 15 ))
curr_image_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(curr_image_address0),
    .ce0(curr_image_ce0),
    .we0(grp_detect_face_downscale_fu_474_dest_we0),
    .d0(grp_detect_face_downscale_fu_474_dest_d0),
    .q0(curr_image_q0)
);

detect_face_integral_image #(
    .DataWidth( 32 ),
    .AddressRange( 19200 ),
    .AddressWidth( 15 ))
integral_image_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(integral_image_address0),
    .ce0(integral_image_ce0),
    .we0(integral_image_we0),
    .d0(storemerge_reg_380),
    .q0(integral_image_q0),
    .address1(grp_detect_face_cascade_classifier_fu_410_integral_image_address1),
    .ce1(integral_image_ce1),
    .q1(integral_image_q1)
);

detect_face_cascade_classifier grp_detect_face_cascade_classifier_fu_410(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_detect_face_cascade_classifier_fu_410_ap_start),
    .ap_done(grp_detect_face_cascade_classifier_fu_410_ap_done),
    .ap_idle(grp_detect_face_cascade_classifier_fu_410_ap_idle),
    .ap_ready(grp_detect_face_cascade_classifier_fu_410_ap_ready),
    .integral_image_address0(grp_detect_face_cascade_classifier_fu_410_integral_image_address0),
    .integral_image_ce0(grp_detect_face_cascade_classifier_fu_410_integral_image_ce0),
    .integral_image_q0(integral_image_q0),
    .integral_image_address1(grp_detect_face_cascade_classifier_fu_410_integral_image_address1),
    .integral_image_ce1(grp_detect_face_cascade_classifier_fu_410_integral_image_ce1),
    .integral_image_q1(integral_image_q1),
    .height(curr_height_reg_310),
    .width(curr_width_reg_298),
    .factor(factor_reg_334),
    .window_size(curr_window_size_reg_322),
    .best_coords_0_read(best_coords_reg_286),
    .best_coords_1_read(best_coords_1_s_reg_273),
    .best_coords_2_read(best_coords_2_s_reg_260),
    .best_coords_3_read(best_coords_3_s_reg_247),
    .best_coords_4_read(best_coords_4_s_reg_234),
    .best_score_read(best_score_0_1_fu_156),
    .ap_return_0(grp_detect_face_cascade_classifier_fu_410_ap_return_0),
    .ap_return_1(grp_detect_face_cascade_classifier_fu_410_ap_return_1),
    .ap_return_2(grp_detect_face_cascade_classifier_fu_410_ap_return_2),
    .ap_return_3(grp_detect_face_cascade_classifier_fu_410_ap_return_3),
    .ap_return_4(grp_detect_face_cascade_classifier_fu_410_ap_return_4),
    .ap_return_5(grp_detect_face_cascade_classifier_fu_410_ap_return_5)
);

detect_face_downscale grp_detect_face_downscale_fu_474(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_detect_face_downscale_fu_474_ap_start),
    .ap_done(grp_detect_face_downscale_fu_474_ap_done),
    .ap_idle(grp_detect_face_downscale_fu_474_ap_idle),
    .ap_ready(grp_detect_face_downscale_fu_474_ap_ready),
    .src_address0(grp_detect_face_downscale_fu_474_src_address0),
    .src_ce0(grp_detect_face_downscale_fu_474_src_ce0),
    .src_q0(input_image_q0),
    .dest_address0(grp_detect_face_downscale_fu_474_dest_address0),
    .dest_ce0(grp_detect_face_downscale_fu_474_dest_ce0),
    .dest_we0(grp_detect_face_downscale_fu_474_dest_we0),
    .dest_d0(grp_detect_face_downscale_fu_474_dest_d0),
    .dest_height(curr_height_reg_310),
    .dest_width(curr_width_reg_298)
);

detect_face_fmul_32ns_32ns_32_2_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
detect_face_fmul_32ns_32ns_32_2_max_dsp_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(factor_1_reg_1280),
    .din1(ap_const_lv32_41C00000),
    .ce(1'b1),
    .dout(grp_fu_485_p2)
);

detect_face_fdiv_32ns_32ns_32_8 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
detect_face_fdiv_32ns_32ns_32_8_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_const_lv32_42F00000),
    .din1(factor_1_reg_1280),
    .ce(1'b1),
    .dout(grp_fu_490_p2)
);

detect_face_fdiv_32ns_32ns_32_8 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
detect_face_fdiv_32ns_32ns_32_8_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_const_lv32_43200000),
    .din1(factor_1_reg_1280),
    .ce(1'b1),
    .dout(grp_fu_495_p2)
);

detect_face_fptrunc_64ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
detect_face_fptrunc_64ns_32_1_U51(
    .din0(tmp_16_reg_1275),
    .dout(factor_1_fu_500_p1)
);

detect_face_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
detect_face_fpext_32ns_64_1_U52(
    .din0(factor_reg_334),
    .dout(tmp_15_fu_503_p1)
);

detect_face_dmul_64ns_64ns_64_5_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
detect_face_dmul_64ns_64ns_64_5_max_dsp_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_15_reg_1210),
    .din1(ap_const_lv64_3FF3333333333333),
    .ce(grp_fu_507_ce),
    .dout(grp_fu_507_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_detect_face_cascade_classifier_fu_410_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond1_fu_641_p2 == 1'b0))) begin
            ap_reg_grp_detect_face_cascade_classifier_fu_410_ap_start <= 1'b1;
        end else if ((1'b1 == grp_detect_face_cascade_classifier_fu_410_ap_ready)) begin
            ap_reg_grp_detect_face_cascade_classifier_fu_410_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_detect_face_downscale_fu_474_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == tmp_13_fu_623_p2))) begin
            ap_reg_grp_detect_face_downscale_fu_474_ap_start <= 1'b1;
        end else if ((1'b1 == grp_detect_face_downscale_fu_474_ap_ready)) begin
            ap_reg_grp_detect_face_downscale_fu_474_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_641_p2 == 1'b0))) begin
        accum_reg_368 <= ap_const_lv32_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        accum_reg_368 <= accum_1_reg_1238;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0) & ~(1'b0 == tmp_s_fu_575_p2) & (1'b0 == tmp_8_fu_593_p2))) begin
        best_coords_reg_286 <= ap_const_lv8_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        best_coords_reg_286 <= best_coords_0_reg_1250;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_641_p2 == 1'b0))) begin
        col_reg_357 <= ap_const_lv32_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        col_reg_357 <= col_2_reg_1218;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0) & ~(1'b0 == tmp_s_fu_575_p2) & (1'b0 == tmp_8_fu_593_p2))) begin
        curr_height_reg_310 <= ap_const_lv32_78;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        curr_height_reg_310 <= result_V_1_fu_1054_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0) & ~(1'b0 == tmp_s_fu_575_p2) & (1'b0 == tmp_8_fu_593_p2))) begin
        curr_width_reg_298 <= ap_const_lv32_A0;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        curr_width_reg_298 <= result_V_2_fu_1153_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0) & ~(1'b0 == tmp_s_fu_575_p2) & (1'b0 == tmp_8_fu_593_p2))) begin
        curr_window_size_reg_322 <= ap_const_lv32_18;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        curr_window_size_reg_322 <= result_V_reg_1299;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0) & ~(1'b0 == tmp_s_fu_575_p2) & (1'b0 == tmp_8_fu_593_p2))) begin
        factor_reg_334 <= ap_const_lv32_3F800000;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        factor_reg_334 <= factor_1_reg_1280;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == tmp_13_fu_623_p2) & ~(1'b0 == tmp_14_fu_635_p2))) begin
        p_0_reg_390 <= ap_const_lv2_3;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == tmp_13_fu_623_p2) & (1'b0 == tmp_14_fu_635_p2))) begin
        p_0_reg_390 <= ap_const_lv2_1;
    end else if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0) & ~(1'b0 == tmp_s_fu_575_p2) & ~(1'b0 == tmp_8_fu_593_p2)) | ((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0) & (1'b0 == tmp_s_fu_575_p2)))) begin
        p_0_reg_390 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0) & ~(1'b0 == tmp_s_fu_575_p2) & ~(1'b0 == tmp_8_fu_593_p2)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == tmp_13_fu_623_p2)))) begin
        read_col <= ap_const_lv32_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0) & (1'b0 == tmp_s_fu_575_p2))) begin
        read_col <= tmp_9_fu_581_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == tmp_13_fu_623_p2))) begin
        read_row <= ap_const_lv7_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0) & ~(1'b0 == tmp_s_fu_575_p2) & ~(1'b0 == tmp_8_fu_593_p2))) begin
        read_row <= tmp_10_fu_599_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond_fu_729_p2))) begin
        row_reg_346 <= row_2_reg_1186;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == grp_detect_face_downscale_fu_474_ap_done))) begin
        row_reg_346 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == tmp_17_reg_1196))) begin
        storemerge_reg_380 <= accum_1_fu_770_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        storemerge_reg_380 <= tmp_21_fu_776_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        accum_1_reg_1238 <= accum_1_fu_770_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(1'b0 == grp_detect_face_cascade_classifier_fu_410_ap_done))) begin
        best_coords_0_reg_1250 <= grp_detect_face_cascade_classifier_fu_410_ap_return_0;
        best_coords_1_reg_1255 <= grp_detect_face_cascade_classifier_fu_410_ap_return_1;
        best_coords_2_reg_1260 <= grp_detect_face_cascade_classifier_fu_410_ap_return_2;
        best_coords_3_reg_1265 <= grp_detect_face_cascade_classifier_fu_410_ap_return_3;
        best_coords_4_reg_1270 <= grp_detect_face_cascade_classifier_fu_410_ap_return_4;
        best_score_0_1_fu_156 <= grp_detect_face_cascade_classifier_fu_410_ap_return_5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        best_coords_1_s_reg_273 <= best_coords_1_reg_1255;
        best_coords_2_s_reg_260 <= best_coords_2_reg_1260;
        best_coords_3_s_reg_247 <= best_coords_3_reg_1265;
        best_coords_4_s_reg_234 <= best_coords_4_reg_1270;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        col_2_reg_1218 <= col_2_fu_735_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        factor_1_reg_1280 <= factor_1_fu_500_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond_fu_729_p2))) begin
        integral_image_addr_1_reg_1233 <= tmp_89_cast_fu_761_p1;
        integral_image_addr_reg_1228 <= tmp_88_cast_fu_750_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        loc_V_1_reg_1294 <= loc_V_1_fu_824_p1;
        loc_V_reg_1288 <= {{p_Val2_s_fu_810_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        loc_V_2_reg_1304 <= {{p_Val2_4_fu_927_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
        loc_V_3_reg_1310 <= loc_V_3_fu_941_p1;
        loc_V_4_reg_1315 <= {{p_Val2_8_fu_945_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
        loc_V_5_reg_1321 <= loc_V_5_fu_959_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        result_V_reg_1299 <= result_V_fu_919_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        row_2_reg_1186 <= row_2_fu_647_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond1_fu_641_p2 == 1'b0))) begin
        tmp_15_reg_1210 <= tmp_15_fu_503_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        tmp_16_reg_1275 <= grp_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_641_p2 == 1'b0))) begin
        tmp_17_reg_1196 <= tmp_17_fu_683_p2;
        tmp_72_reg_1191[15 : 5] <= tmp_72_fu_677_p2[15 : 5];
        tmp_73_reg_1200[15 : 5] <= tmp_73_fu_719_p2[15 : 5];
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_907) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_915) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_923) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_158) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_167) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_563) begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_176) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_187) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_39) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_196) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_211) begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_885) begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_355) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_320) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_76) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_101) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_119) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_128) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_334) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_137) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        curr_image_address0 = tmp_88_cast_fu_750_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        curr_image_address0 = grp_detect_face_downscale_fu_474_dest_address0;
    end else begin
        curr_image_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        curr_image_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        curr_image_ce0 = grp_detect_face_downscale_fu_474_dest_ce0;
    end else begin
        curr_image_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(1'b0 == grp_detect_face_cascade_classifier_fu_410_ap_done)) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        grp_fu_507_ce = 1'b1;
    end else begin
        grp_fu_507_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        input_image_address0 = tmp_69_cast_fu_570_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        input_image_address0 = grp_detect_face_downscale_fu_474_src_address0;
    end else begin
        input_image_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        input_image_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        input_image_ce0 = grp_detect_face_downscale_fu_474_src_ce0;
    end else begin
        input_image_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        input_image_we0 = 1'b1;
    end else begin
        input_image_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        integral_image_address0 = integral_image_addr_reg_1228;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        integral_image_address0 = integral_image_addr_1_reg_1233;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        integral_image_address0 = grp_detect_face_cascade_classifier_fu_410_integral_image_address0;
    end else begin
        integral_image_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        integral_image_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        integral_image_ce0 = grp_detect_face_cascade_classifier_fu_410_integral_image_ce0;
    end else begin
        integral_image_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        integral_image_ce1 = grp_detect_face_cascade_classifier_fu_410_integral_image_ce1;
    end else begin
        integral_image_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        integral_image_we0 = 1'b1;
    end else begin
        integral_image_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == tmp_13_fu_623_p2) & (1'b0 == tmp_14_fu_635_p2))) begin
        result_x1_0_ap_vld = 1'b1;
    end else begin
        result_x1_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == tmp_13_fu_623_p2) & (1'b0 == tmp_14_fu_635_p2))) begin
        result_x2_0_ap_vld = 1'b1;
    end else begin
        result_x2_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == tmp_13_fu_623_p2) & (1'b0 == tmp_14_fu_635_p2))) begin
        result_y1_0_ap_vld = 1'b1;
    end else begin
        result_y1_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == tmp_13_fu_623_p2) & (1'b0 == tmp_14_fu_635_p2))) begin
        result_y2_0_ap_vld = 1'b1;
    end else begin
        result_y2_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if ((~(ap_start == 1'b0) & ~(1'b0 == tmp_s_fu_575_p2) & (1'b0 == tmp_8_fu_593_p2))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if ((~(ap_start == 1'b0) & ((1'b0 == tmp_s_fu_575_p2) | ~(1'b0 == tmp_8_fu_593_p2)))) begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((1'b0 == tmp_13_fu_623_p2)) begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (~(1'b0 == grp_detect_face_downscale_fu_474_ap_done)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if ((exitcond1_fu_641_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        ap_ST_st5_fsm_4 : begin
            if ((1'b0 == exitcond_fu_729_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st6_fsm_5 : begin
            if (~(1'b0 == tmp_17_reg_1196)) begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st9_fsm_8 : begin
            if (~(1'b0 == grp_detect_face_cascade_classifier_fu_410_ap_done)) begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accum_1_fu_770_p2 = (accum_reg_368 + tmp_20_fu_766_p1);

assign ap_return = $signed(p_0_reg_390);

always @ (*) begin
    ap_sig_101 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_119 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_128 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_137 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_158 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_167 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_176 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_187 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_196 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_211 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_320 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_334 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_355 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_39 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_563 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_76 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_885 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_907 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_915 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_923 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

assign col_2_fu_735_p2 = (col_reg_357 + ap_const_lv32_1);

assign exitcond1_fu_641_p2 = ((row_reg_346 == curr_height_reg_310) ? 1'b1 : 1'b0);

assign exitcond_fu_729_p2 = ((col_reg_357 == curr_width_reg_298) ? 1'b1 : 1'b0);

assign grp_detect_face_cascade_classifier_fu_410_ap_start = ap_reg_grp_detect_face_cascade_classifier_fu_410_ap_start;

assign grp_detect_face_downscale_fu_474_ap_start = ap_reg_grp_detect_face_downscale_fu_474_ap_start;

assign isNeg_1_fu_983_p3 = sh_assign_2_fu_977_p2[ap_const_lv32_8];

assign isNeg_2_fu_1082_p3 = sh_assign_4_fu_1076_p2[ap_const_lv32_8];

assign isNeg_fu_848_p3 = sh_assign_fu_842_p2[ap_const_lv32_8];

assign loc_V_1_fu_824_p1 = p_Val2_s_fu_810_p1[22:0];

assign loc_V_3_fu_941_p1 = p_Val2_4_fu_927_p1[22:0];

assign loc_V_5_fu_959_p1 = p_Val2_8_fu_945_p1[22:0];

assign p_Result_4_fu_963_p3 = {{1'b1}, {loc_V_3_reg_1310}};

assign p_Result_5_fu_1062_p3 = {{1'b1}, {loc_V_5_reg_1321}};

assign p_Result_s_fu_828_p3 = {{1'b1}, {loc_V_1_reg_1294}};

assign p_Val2_4_fu_927_p1 = grp_fu_490_p2;

assign p_Val2_8_fu_945_p1 = grp_fu_495_p2;

assign p_Val2_s_fu_810_p1 = grp_fu_485_p2;

assign p_shl2_cast_fu_550_p1 = tmp_63_fu_542_p3;

assign p_shl3_cast_fu_699_p3 = {{tmp_111_fu_695_p1}, {ap_const_lv7_0}};

assign p_shl4_cast_fu_711_p3 = {{tmp_112_fu_707_p1}, {ap_const_lv5_0}};

assign p_shl5_cast_fu_657_p3 = {{tmp_109_fu_653_p1}, {ap_const_lv7_0}};

assign p_shl6_cast_fu_669_p3 = {{tmp_110_fu_665_p1}, {ap_const_lv5_0}};

assign p_shl_cast_fu_538_p1 = tmp_62_fu_530_p3;

assign result_V_1_fu_1054_p3 = ((isNeg_1_fu_983_p3[0:0] === 1'b1) ? tmp_68_fu_1040_p1 : tmp_69_fu_1044_p4);

assign result_V_2_fu_1153_p3 = ((isNeg_2_fu_1082_p3[0:0] === 1'b1) ? tmp_70_fu_1139_p1 : tmp_71_fu_1143_p4);

assign result_V_fu_919_p3 = ((isNeg_fu_848_p3[0:0] === 1'b1) ? tmp_66_fu_905_p1 : tmp_67_fu_909_p4);

assign result_x1_0 = best_coords_1_s_reg_273;

assign result_x2_0 = best_coords_3_s_reg_247;

assign result_y1_0 = best_coords_2_s_reg_260;

assign result_y2_0 = best_coords_4_s_reg_234;

assign row_2_fu_647_p2 = (row_reg_346 + ap_const_lv32_1);

assign sh_assign_1_fu_865_p3 = ((isNeg_fu_848_p3[0:0] === 1'b1) ? tmp_1_i_i_cast_fu_861_p1 : sh_assign_fu_842_p2);

assign sh_assign_2_fu_977_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i6_cast_fu_974_p1));

assign sh_assign_3_fu_1000_p3 = ((isNeg_1_fu_983_p3[0:0] === 1'b1) ? tmp_1_i_i9_cast_fu_996_p1 : sh_assign_2_fu_977_p2);

assign sh_assign_4_fu_1076_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i22_cast_fu_1073_p1));

assign sh_assign_4_i10_cast_cast_fu_1012_p1 = $signed(sh_assign_3_fu_1000_p3);

assign sh_assign_4_i10_cast_fu_1008_p1 = $signed(sh_assign_3_fu_1000_p3);

assign sh_assign_4_i26_cast_cast_fu_1111_p1 = $signed(sh_assign_5_fu_1099_p3);

assign sh_assign_4_i26_cast_fu_1107_p1 = $signed(sh_assign_5_fu_1099_p3);

assign sh_assign_4_i_cast_cast_fu_877_p1 = $signed(sh_assign_1_fu_865_p3);

assign sh_assign_4_i_cast_fu_873_p1 = $signed(sh_assign_1_fu_865_p3);

assign sh_assign_5_fu_1099_p3 = ((isNeg_2_fu_1082_p3[0:0] === 1'b1) ? tmp_1_i_i25_cast_fu_1095_p1 : sh_assign_4_fu_1076_p2);

assign sh_assign_fu_842_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i_cast_fu_839_p1));

assign tmp_102_fu_897_p3 = tmp_3_i_i_fu_885_p2[ap_const_lv32_17];

assign tmp_105_fu_1032_p3 = tmp_3_i_i1_fu_1020_p2[ap_const_lv32_17];

assign tmp_108_fu_1131_p3 = tmp_3_i_i2_fu_1119_p2[ap_const_lv32_17];

assign tmp_109_fu_653_p1 = row_reg_346[8:0];

assign tmp_10_fu_599_p2 = (read_row + ap_const_lv7_1);

assign tmp_110_fu_665_p1 = row_reg_346[10:0];

assign tmp_111_fu_695_p1 = tmp_18_fu_689_p2[8:0];

assign tmp_112_fu_707_p1 = tmp_18_fu_689_p2[10:0];

assign tmp_113_fu_741_p1 = col_reg_357[15:0];

assign tmp_11_fu_611_p2 = ((curr_height_reg_310 > ap_const_lv32_18) ? 1'b1 : 1'b0);

assign tmp_12_fu_617_p2 = ((curr_width_reg_298 > ap_const_lv32_18) ? 1'b1 : 1'b0);

assign tmp_13_fu_623_p2 = (tmp_11_fu_611_p2 & tmp_12_fu_617_p2);

assign tmp_14_fu_635_p2 = ((best_coords_reg_286 == ap_const_lv8_0) ? 1'b1 : 1'b0);

assign tmp_17_fu_683_p2 = ((row_reg_346 == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign tmp_18_fu_689_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(row_reg_346));

assign tmp_1_i_i1_fu_1090_p2 = (ap_const_lv8_7F - loc_V_4_reg_1315);

assign tmp_1_i_i25_cast_fu_1095_p1 = $signed(tmp_1_i_i1_fu_1090_p2);

assign tmp_1_i_i9_cast_fu_996_p1 = $signed(tmp_1_i_i9_fu_991_p2);

assign tmp_1_i_i9_fu_991_p2 = (ap_const_lv8_7F - loc_V_2_reg_1304);

assign tmp_1_i_i_cast_fu_861_p1 = $signed(tmp_1_i_i_fu_856_p2);

assign tmp_1_i_i_fu_856_p2 = (ap_const_lv8_7F - loc_V_reg_1288);

assign tmp_20_fu_766_p1 = curr_image_q0;

assign tmp_21_fu_776_p2 = (integral_image_q0 + accum_1_reg_1238);

assign tmp_2_i_i1_fu_1016_p1 = $unsigned(sh_assign_4_i10_cast_fu_1008_p1);

assign tmp_2_i_i2_fu_1115_p1 = $unsigned(sh_assign_4_i26_cast_fu_1107_p1);

assign tmp_2_i_i_fu_881_p1 = $unsigned(sh_assign_4_i_cast_fu_873_p1);

assign tmp_3_i_i1_fu_1020_p2 = p_Result_4_fu_963_p3 >> sh_assign_4_i10_cast_cast_fu_1012_p1;

assign tmp_3_i_i2_fu_1119_p2 = p_Result_5_fu_1062_p3 >> sh_assign_4_i26_cast_cast_fu_1111_p1;

assign tmp_3_i_i_fu_885_p2 = p_Result_s_fu_828_p3 >> sh_assign_4_i_cast_cast_fu_877_p1;

assign tmp_5_i_i1_fu_1026_p2 = tmp_i_i5_fu_970_p1 << tmp_2_i_i1_fu_1016_p1;

assign tmp_5_i_i2_fu_1125_p2 = tmp_i_i1_fu_1069_p1 << tmp_2_i_i2_fu_1115_p1;

assign tmp_5_i_i_fu_891_p2 = tmp_i_i_fu_835_p1 << tmp_2_i_i_fu_881_p1;

assign tmp_62_fu_530_p3 = {{read_row}, {ap_const_lv7_0}};

assign tmp_63_fu_542_p3 = {{read_row}, {ap_const_lv5_0}};

assign tmp_64_fu_554_p2 = (p_shl_cast_fu_538_p1 + p_shl2_cast_fu_550_p1);

assign tmp_65_fu_564_p2 = (tmp_fu_522_p1 + tmp_68_cast_fu_560_p1);

assign tmp_66_fu_905_p1 = tmp_102_fu_897_p3;

assign tmp_67_fu_909_p4 = {{tmp_5_i_i_fu_891_p2[ap_const_lv32_36 : ap_const_lv32_17]}};

assign tmp_68_cast_fu_560_p1 = tmp_64_fu_554_p2;

assign tmp_68_fu_1040_p1 = tmp_105_fu_1032_p3;

assign tmp_69_cast_fu_570_p1 = tmp_65_fu_564_p2;

assign tmp_69_fu_1044_p4 = {{tmp_5_i_i1_fu_1026_p2[ap_const_lv32_36 : ap_const_lv32_17]}};

assign tmp_70_fu_1139_p1 = tmp_108_fu_1131_p3;

assign tmp_71_fu_1143_p4 = {{tmp_5_i_i2_fu_1125_p2[ap_const_lv32_36 : ap_const_lv32_17]}};

assign tmp_72_fu_677_p2 = (p_shl5_cast_fu_657_p3 + p_shl6_cast_fu_669_p3);

assign tmp_73_fu_719_p2 = (p_shl3_cast_fu_699_p3 + p_shl4_cast_fu_711_p3);

assign tmp_74_fu_745_p2 = (tmp_72_reg_1191 + tmp_113_fu_741_p1);

assign tmp_75_fu_756_p2 = (tmp_73_reg_1200 + tmp_113_fu_741_p1);

assign tmp_88_cast_fu_750_p1 = tmp_74_fu_745_p2;

assign tmp_89_cast_fu_761_p1 = tmp_75_fu_756_p2;

assign tmp_8_fu_593_p2 = ((read_row < ap_const_lv7_77) ? 1'b1 : 1'b0);

assign tmp_9_fu_581_p2 = (read_col + ap_const_lv32_1);

assign tmp_fu_522_p1 = read_col[15:0];

assign tmp_i_i1_fu_1069_p1 = p_Result_5_fu_1062_p3;

assign tmp_i_i5_fu_970_p1 = p_Result_4_fu_963_p3;

assign tmp_i_i_fu_835_p1 = p_Result_s_fu_828_p3;

assign tmp_i_i_i22_cast_fu_1073_p1 = loc_V_4_reg_1315;

assign tmp_i_i_i6_cast_fu_974_p1 = loc_V_2_reg_1304;

assign tmp_i_i_i_cast_fu_839_p1 = loc_V_reg_1288;

assign tmp_s_fu_575_p2 = ((read_col == ap_const_lv32_9F) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_72_reg_1191[4:0] <= 5'b00000;
    tmp_73_reg_1200[4:0] <= 5'b00000;
end

endmodule //detect_face
